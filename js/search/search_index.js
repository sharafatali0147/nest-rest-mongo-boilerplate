var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.474,1,2.004]],["body/controllers/AppController.html",[0,2.408,1,2.666,2,1.429,3,0.368,4,0.323,5,0.371,6,2.535,7,1.015,8,3.013,9,0.467,10,1.634,11,3.478,12,5.14,13,3.049,14,2.158,15,0.035,16,3.049,17,3.275,18,3.526,19,3.478,20,3.702,21,3.275,22,1.148,23,3.049,24,2.158,25,3.478,26,1.191,27,0.698,28,1.09,29,5.386,30,2.389,31,1.527,32,4.776,33,1.787,34,4.184,35,3.013,36,0.958,37,3.049,38,3.049,39,2.935,40,2.158,41,2.389,42,1.093,43,2.389,44,3.013,45,0.57,46,1.943,47,1.541,48,2.535,49,0.698,50,2.651,51,2.535,52,3.478,53,3.879,54,1.429,55,2.535,56,1.741,57,1.943,58,0.368,59,0.197,60,0.837,61,0.914,62,2.535,63,0.914,64,3.478,65,2.408,66,3.478,67,1.05,68,3.049,69,3.049,70,3.049,71,3.049,72,0.016,73,0.022,74,0.016]],["title/modules/AppModule.html",[36,0.72,75,1.796]],["body/modules/AppModule.html",[1,2.939,2,1.873,3,0.557,4,0.302,5,0.311,15,0.035,33,1.708,36,1.056,45,0.639,49,0.654,50,2.812,51,2.374,58,0.345,59,0.184,67,0.716,72,0.015,73,0.021,74,0.015,75,3.474,76,1.22,77,1.22,78,1.63,79,1.63,80,1.63,81,2.161,82,1.473,83,2.374,84,2.374,85,2.374,86,3.113,87,2.946,88,2.812,89,3.003,90,2.283,91,1.63,92,1.338,93,2.855,94,3.184,95,2.161,96,3.998,97,2.374,98,2.374,99,2.855,100,2.374,101,3.998,102,1.63,103,2.374,104,1.536,105,1.473,106,2.855,107,2.374,108,2.855,109,2.855,110,1.82,111,2.057,112,2.057,113,1.473,114,2.855,115,2.855,116,2.062,117,2.547,118,2.855,119,2.855,120,2.855,121,2.379,122,2.855,123,2.855,124,2.855,125,4.613,126,3.599,127,3.998,128,3.998,129,1.951,130,3.998,131,1.372,132,3.998,133,3.998,134,2.855,135,3.998,136,2.855,137,2.057,138,2.855,139,2.855,140,2.855,141,2.855,142,2.855,143,2.855,144,2.855,145,2.855,146,2.855,147,2.855,148,2.855,149,2.855]],["title/injectables/AppService.html",[50,1.623,150,1.03]],["body/injectables/AppService.html",[3,0.427,4,0.374,5,0.4,7,0.787,9,0.541,10,1.804,15,0.035,22,1.268,24,2.383,26,1.381,27,0.809,28,1.264,31,1.268,39,2.638,40,2.383,41,2.938,42,1.178,43,3.115,44,3.327,45,0.544,47,1.385,49,0.809,50,2.383,58,0.427,59,0.228,60,1.498,63,1.06,67,0.887,72,0.019,73,0.025,74,0.019,95,1.657,104,1.554,105,1.824,116,1.824,129,2.268,150,1.513,151,2.019,152,2.939,153,5.456,154,3.535,155,3.93,156,3.535,157,0.541,158,3.115,159,3.535,160,3.84,161,3.279,162,1.804,163,3.535,164,0.97,165,5.145,166,3.535,167,3.535]],["title/controllers/AuthController.html",[0,1.474,168,2.004]],["body/controllers/AuthController.html",[0,2.109,2,1.279,3,0.33,4,0.289,5,0.212,7,1.036,9,0.418,10,1.513,14,1.998,15,0.035,18,2.212,20,3.528,22,1.063,26,1.513,27,0.886,28,1.385,30,1.559,31,1.063,33,1.655,45,0.569,47,1.469,49,0.625,53,3.98,54,1.279,58,0.33,59,0.176,60,1.063,61,1.551,63,1.162,65,2.518,67,0.972,72,0.015,73,0.021,74,0.015,129,1.513,157,0.593,162,1.513,164,1.063,168,2.468,169,2.27,170,2.27,171,2.73,172,2.57,173,2.098,174,3.598,175,3.22,176,2.73,177,2.668,178,2.73,179,4.899,180,3.873,181,4.899,182,3.873,183,4.899,184,4.899,185,2.73,186,3.528,187,2.468,188,3.122,189,4.072,190,4.899,191,2.296,192,3.528,193,2.093,194,2.73,195,2.424,196,2.73,197,5.373,198,2.73,199,2.468,200,2.73,201,2.27,202,2.424,203,1.559,204,2.27,205,1.966,206,2.73,207,1.74,208,2.73,209,2.73,210,0.894,211,2.73,212,2.79,213,2.73,214,2.295,215,2.73,216,3.873,217,2.73,218,2.73,219,2.73]],["title/modules/AuthModule.html",[36,0.72,86,1.796]],["body/modules/AuthModule.html",[2,2.107,3,0.41,4,0.359,5,0.264,15,0.035,36,1.154,45,0.637,49,0.777,56,1.938,58,0.41,59,0.219,67,0.852,72,0.018,73,0.024,74,0.018,76,1.45,77,1.45,78,1.938,79,1.938,80,1.938,81,2.363,82,2.32,86,3.522,87,3.021,88,2.962,90,2.568,91,1.938,92,1.591,94,3.214,103,2.822,104,1.474,105,1.751,107,2.822,116,1.751,117,2.163,168,3.214,173,1.326,202,2.69,204,2.822,220,2.822,221,3.394,222,2.822,223,3.278,224,3.394,225,3.394,226,2.163,227,3.394,228,3.394,229,3.394,230,4.498,231,4.498,232,2.568,233,3.394,234,2.822,235,2.822,236,3.394,237,4.498,238,3.394,239,3.394]],["title/injectables/AuthService.html",[150,1.03,202,1.474]],["body/injectables/AuthService.html",[3,0.248,4,0.217,5,0.159,7,0.649,9,0.314,10,1.225,15,0.035,22,1.262,26,1.666,27,0.976,28,1.525,30,2.175,31,1.33,33,1.627,42,1.3,45,0.513,47,1.513,49,0.47,58,0.379,59,0.132,60,1.171,61,1.599,63,1.454,67,1.07,72,0.011,73,0.017,74,0.011,104,1.463,105,1.058,126,2.743,129,1.893,131,0.563,150,1.027,151,1.172,157,0.742,162,2.082,164,1.262,172,1.791,173,1.893,174,1.999,177,2.371,186,1.478,191,2.071,192,1.478,193,2.071,199,1.307,202,1.47,203,1.172,205,1.478,207,1.307,210,1.651,214,0.961,226,1.307,232,2.436,240,1.478,241,1.225,242,3.167,243,3.167,244,3.137,245,3.137,246,2.052,247,4.324,248,3.137,249,2.052,250,2.071,251,2.052,252,2.26,253,2.608,254,3.159,255,2.26,256,2.608,257,2.052,258,2.608,259,3.746,260,3.918,261,3.167,262,3.167,263,2.608,264,2.608,265,2.052,266,2.608,267,1.225,268,1.999,269,1.618,270,3.167,271,2.608,272,2.743,273,2.26,274,1.706,275,1.307,276,1.307,277,1.706,278,0.515,279,3.167,280,2.608,281,1.478,282,2.608,283,1.706,284,1.999,285,1.122,286,1.618,287,1.618,288,1.706,289,1.706,290,1.706,291,1.706,292,3.821,293,1.706,294,3.167,295,3.311,296,2.608,297,2.26,298,3.167,299,2.175,300,1.706,301,1.478,302,1.706,303,1.706,304,1.706,305,1.706,306,0.961,307,1.172,308,1.307,309,1.706]],["title/modules/ConfigModule.html",[36,0.72,87,1.623]],["body/modules/ConfigModule.html",[3,0.516,4,0.452,5,0.332,15,0.034,36,1.285,45,0.551,49,0.978,58,0.516,59,0.276,72,0.023,73,0.028,74,0.023,76,1.825,77,1.825,78,2.44,79,2.44,80,2.44,81,2.44,82,2.897,87,3.091,90,2.973,91,2.44,92,2.002,104,1.709,131,1.173,310,3.552,311,3.552,312,4.273,313,4.273,314,3.552,315,4.273,316,4.273]],["title/classes/ConfigService.html",[59,0.203,104,0.863]],["body/classes/ConfigService.html",[3,0.284,4,0.249,5,0.421,7,0.593,9,0.36,10,1.358,15,0.035,22,1.339,24,1.794,26,1.785,27,1.046,28,1.634,31,1.488,39,3.301,40,1.794,41,2.362,42,1.384,43,2.609,45,0.438,47,1.371,58,0.42,59,0.152,60,1.136,63,1.241,65,1.103,67,1.038,72,0.013,73,0.019,74,0.013,104,0.955,129,1.358,131,0.646,137,2.98,157,0.746,158,3.261,161,1.499,162,1.993,164,1.136,187,1.499,241,1.358,267,1.785,278,0.59,306,1.103,317,1.344,318,1.695,319,3.833,320,3.478,321,2.98,322,3.478,323,2.891,324,3.478,325,2.891,326,4.507,327,2.891,328,2.891,329,2.915,330,2.891,331,2.353,332,3.905,333,2.505,334,2.912,335,1.794,336,2.891,337,2.353,338,2.505,339,3.292,340,2.912,341,2.891,342,2.98,343,3.439,344,2.891,345,2.353,346,2.891,347,2.891,348,3.799,349,2.891,350,2.505,351,2.891,352,1.63,353,2.891,354,1.956,355,1.695,356,2.891,357,1.695,358,2.891,359,1.956,360,1.956,361,1.956,362,1.956,363,1.214,364,1.956,365,1.956,366,1.956,367,1.956,368,1.695,369,1.956,370,1.695,371,1.956,372,1.956,373,1.956,374,1.695,375,1.695,376,1.956,377,1.695,378,1.956,379,1.695,380,1.956,381,1.695,382,2.216,383,1.956,384,2.891,385,1.956,386,1.956,387,1.956,388,1.956,389,1.956]],["title/interfaces/EnvConfig.html",[278,0.789,319,2.004]],["body/interfaces/EnvConfig.html",[3,0.346,4,0.303,5,0.409,7,0.488,15,0.035,22,0.787,24,1.478,31,1.374,39,3.116,40,1.478,41,2.288,42,1.384,43,2.288,45,0.489,47,1.501,58,0.484,59,0.185,60,0.787,63,0.859,65,1.343,67,1.159,72,0.015,73,0.022,74,0.015,104,0.787,129,1.119,131,0.787,137,3.328,158,3.116,161,1.826,162,1.565,164,1.269,187,1.826,267,1.565,278,0.719,306,1.343,318,2.064,319,3.789,321,2.064,323,2.382,325,2.382,326,4.161,327,2.382,328,2.382,329,2.639,330,2.382,332,4.035,333,2.064,334,3.189,335,1.478,336,2.382,338,2.064,339,2.886,340,2.554,341,2.382,342,2.886,343,3.332,344,2.382,346,2.382,347,2.382,348,3.332,349,2.382,350,2.064,351,2.382,352,1.343,353,2.382,354,2.382,355,2.064,356,3.332,357,2.064,358,3.332,359,3.332,360,2.382,361,2.382,362,2.382,363,1.478,364,2.382,365,2.382,366,2.382,367,2.382,368,2.064,369,2.382,370,2.064,371,2.382,372,2.382,373,2.382,374,2.064,375,2.064,376,2.382,377,2.064,378,2.382,379,2.064,380,2.382,381,2.064,382,2.554,383,2.382,384,3.332,385,2.382,386,2.382,387,2.382,388,2.382,389,2.382,390,1.478,391,2.866,392,2.866]],["title/interfaces/IGenericMessageBody.html",[278,0.789,393,1.796]],["body/interfaces/IGenericMessageBody.html",[3,0.272,4,0.239,5,0.175,7,0.384,9,0.345,15,0.035,17,1.437,21,1.437,24,2.081,27,0.516,31,1.379,33,1.723,42,1.326,45,0.579,46,2.147,47,1.606,49,0.516,58,0.407,59,0.145,60,0.925,61,0.676,63,0.676,65,1.579,67,1.373,72,0.012,73,0.018,74,0.012,102,1.287,113,1.163,129,0.88,131,1.228,150,1.103,157,0.345,162,0.88,164,1.228,173,1.316,188,1.437,191,2.147,193,2.448,195,2.097,210,1.93,212,1.624,214,1.579,241,1.316,250,0.963,267,0.88,268,1.437,269,1.738,275,2.147,276,2.147,278,0.566,285,2.122,287,1.163,299,1.924,306,1.89,307,1.924,308,1.437,335,1.163,390,1.163,393,1.924,394,1.624,395,2.801,396,3.353,397,3.353,398,4.33,399,2.427,400,2.147,401,2.905,402,1.163,403,1.874,404,2.905,405,2.801,406,1.437,407,1.874,408,1.437,409,1.874,410,2.081,411,1.624,412,2.801,413,1.874,414,1.624,415,1.874,416,2.905,417,3.202,418,1.874,419,1.874,420,1.874,421,1.874,422,2.427,423,1.874,424,2.244,425,1.874,426,2.801,427,1.874,428,2.801,429,1.874,430,1.874,431,2.801,432,1.874,433,1.874,434,1.874,435,1.624,436,1.874,437,1.624,438,2.801,439,1.624,440,1.874,441,1.874,442,1.624,443,1.874,444,1.624,445,1.874,446,1.874,447,1.874,448,1.874,449,1.624,450,1.874,451,1.874,452,1.874,453,1.624,454,1.874,455,1.874,456,1.874,457,1.624,458,1.624,459,1.874,460,1.874,461,1.874,462,1.874,463,1.874,464,1.624,465,1.874,466,1.624,467,1.874,468,1.874,469,1.874,470,1.624,471,1.874]],["title/interfaces/IProfile.html",[250,1.344,278,0.789]],["body/interfaces/IProfile.html",[3,0.362,4,0.317,5,0.233,7,0.511,9,0.459,15,0.035,27,1.298,42,1.441,45,0.438,58,0.5,63,1.701,72,0.016,73,0.022,74,0.016,113,2.926,121,2.762,131,0.823,157,0.943,164,0.823,210,1.671,241,1.615,250,1.767,278,0.752,284,3.252,285,2.028,286,2.926,287,2.762,352,1.405,363,2.442,390,1.547,400,2.635,402,2.632,408,3.252,414,2.978,424,2.658,472,2.159,473,5.354,474,2.978,475,4.985,476,4.734,477,2.998,478,2.762,479,2.493]],["title/interfaces/ITokenReturnBody.html",[203,1.796,278,0.789]],["body/interfaces/ITokenReturnBody.html",[3,0.28,4,0.245,5,0.18,7,0.395,9,0.355,15,0.035,30,2.34,31,1.125,33,1.751,42,1.355,45,0.537,47,1.576,49,0.53,58,0.415,59,0.149,60,0.943,61,1.453,63,1.36,67,1.215,72,0.012,73,0.018,74,0.012,104,1.33,105,1.195,126,2.952,129,1.601,131,0.636,150,1.125,157,0.694,162,1.892,164,1.33,172,1.322,173,1.342,174,1.476,177,2.114,186,2.476,191,1.751,192,1.668,193,1.938,199,1.476,202,1.085,203,1.963,205,1.668,207,1.476,210,1.485,214,1.085,226,1.476,232,1.963,240,1.668,241,1.342,242,1.925,243,1.925,247,4.027,250,1.751,252,1.668,253,1.925,254,3.324,255,1.668,256,1.925,258,1.925,259,3.266,260,3.971,261,3.407,262,3.407,263,1.925,264,1.925,266,1.925,267,0.904,268,1.476,269,1.195,270,2.857,271,1.925,272,2.952,273,2.476,274,1.925,275,2.19,276,2.19,277,2.857,278,0.581,279,4.368,280,4.027,281,2.476,282,2.857,283,1.925,284,2.19,285,1.229,286,1.773,287,1.773,288,1.925,289,1.925,290,1.925,291,1.925,292,4.027,293,1.925,294,3.407,295,3.489,296,2.857,297,2.476,298,3.407,299,2.34,300,1.925,301,1.668,302,1.925,303,1.925,304,1.925,305,1.925,306,1.085,307,1.322,308,1.476,309,1.925,390,1.195]],["title/injectables/JwtStrategy.html",[150,1.03,223,1.796]],["body/injectables/JwtStrategy.html",[3,0.388,4,0.34,5,0.25,7,0.739,9,0.492,10,1.693,15,0.035,18,2.475,22,1.19,26,1.693,27,0.992,28,1.55,31,1.19,33,1.852,35,2.314,45,0.58,47,1.575,49,0.735,56,1.834,58,0.388,59,0.316,60,1.442,61,1.785,63,1.3,72,0.017,73,0.023,74,0.017,104,1.612,105,1.657,150,1.419,151,1.834,157,0.664,162,1.255,164,0.882,173,1.916,187,3.495,193,2.096,207,2.047,223,2.475,232,3.227,235,2.671,254,3.298,267,1.693,273,2.314,281,3.122,284,2.047,338,3.122,382,2.047,474,2.314,480,2.671,481,4.906,482,3.212,483,3.212,484,3.212,485,5.651,486,5.252,487,3.212,488,4.335,489,4.335,490,4.335,491,3.212,492,3.212,493,3.212,494,3.212,495,3.212,496,3.212,497,3.212,498,3.212,499,3.212,500,2.314,501,4.335,502,4.335,503,4.335]],["title/classes/LoginPayload.html",[59,0.203,177,1.623]],["body/classes/LoginPayload.html",[3,0.476,4,0.417,5,0.306,7,0.672,9,0.603,14,2.554,15,0.035,22,1.359,42,1.3,45,0.524,54,1.846,58,0.476,59,0.366,72,0.021,73,0.027,74,0.021,121,2.554,157,0.758,174,3.155,177,2.554,241,1.934,285,2.093,317,2.25,424,2.743,478,2.554,504,3.275,505,4.952,506,3.566,507,3.275,508,3.94,509,4.092,510,2.838,511,3.94,512,3.9,513,3.566,514,3.9,515,2.838,516,2.511,517,2.838]],["title/classes/PatchProfilePayload.html",[59,0.203,410,1.623]],["body/classes/PatchProfilePayload.html",[3,0.424,4,0.372,5,0.273,7,0.599,9,0.538,14,2.807,15,0.035,22,1.494,27,1.293,42,1.371,45,0.487,54,1.646,58,0.424,59,0.351,72,0.019,73,0.025,74,0.019,121,1.812,157,0.833,191,1.965,210,1.506,241,1.796,285,2.019,286,2.914,317,2.005,340,2.238,410,2.373,424,2.647,478,1.812,506,2.53,509,4.315,510,2.53,512,4.069,513,3.313,514,4.175,515,2.53,516,2.238,517,2.53,518,2.92,519,3.824,520,3.512,521,3.512,522,3.512,523,3.824,524,3.824,525,3.512,526,3.512,527,3.512,528,3.512,529,3.824,530,2.92]],["title/controllers/ProfileController.html",[0,1.474,531,2.004]],["body/controllers/ProfileController.html",[0,1.895,2,1.061,3,0.274,4,0.24,5,0.176,7,1.005,9,0.347,10,1.32,11,2.81,14,2.086,15,0.035,17,3.207,18,3.274,19,3.362,20,3.625,21,3.207,22,1.11,26,1.579,27,0.926,28,1.446,30,1.293,31,1.382,42,1.194,45,0.552,46,3.555,47,1.439,48,1.882,49,0.518,52,2.81,53,3.756,54,1.061,55,1.882,56,1.293,58,0.274,59,0.146,60,0.621,61,1.345,62,1.882,63,0.679,64,3.362,65,2.358,66,3.362,67,1.015,72,0.012,73,0.018,74,0.012,110,1.443,111,1.631,112,1.631,131,0.621,157,0.619,164,0.621,170,1.882,173,2.14,191,1.728,193,2.228,195,1.061,201,1.882,210,2.057,214,1.895,250,0.967,267,1.32,269,1.743,285,2.024,306,1.061,335,1.743,393,1.293,404,2.434,406,1.443,410,2.313,411,1.631,416,2.434,417,2.858,457,2.434,458,2.434,466,1.631,470,2.434,519,4.184,531,2.154,532,1.882,533,2.264,534,3.38,535,2.264,536,2.264,537,4.485,538,3.728,539,4.485,540,3.38,541,2.264,542,3.38,543,3.38,544,2.264,545,2.264,546,5.033,547,2.264,548,3.38,549,2.81,550,2.264,551,2.264,552,3.38,553,2.264,554,3.38,555,4.044,556,1.882,557,2.264,558,2.264,559,2.264,560,2.264,561,2.264,562,1.882,563,3.38,564,2.264,565,2.264,566,2.264,567,2.264,568,2.264]],["title/modules/ProfileModule.html",[36,0.72,88,1.623]],["body/modules/ProfileModule.html",[2,2.338,3,0.482,4,0.422,5,0.31,15,0.034,27,0.913,36,1.246,45,0.622,49,0.913,58,0.482,59,0.257,61,1.892,72,0.021,73,0.027,74,0.021,76,1.704,77,1.704,78,2.277,79,2.277,80,2.277,81,2.552,82,2.809,88,3.136,90,2.849,91,2.277,92,1.869,94,2.542,100,3.316,102,2.277,210,1.783,363,2.057,406,2.542,531,3.47,556,3.316,569,3.316,570,3.316,571,3.316,572,3.988,573,3.988,574,3.988]],["title/injectables/ProfileService.html",[61,0.943,150,1.03]],["body/injectables/ProfileService.html",[3,0.226,4,0.198,5,0.145,7,0.498,9,0.286,10,1.14,15,0.035,17,1.191,21,1.191,22,1.339,24,2.408,26,1.904,27,1.155,28,1.743,31,1.507,33,1.535,42,1.359,45,0.549,46,2.806,47,1.513,49,0.428,58,0.353,59,0.121,60,1.114,61,0.876,63,0.561,65,0.876,67,1.266,72,0.01,73,0.016,74,0.01,102,1.067,113,0.964,129,1.14,131,1.114,150,0.956,151,1.067,157,0.746,162,0.73,164,1.114,173,1.823,188,2.587,191,2.215,193,2.492,195,2.285,210,1.999,212,2.103,214,1.368,250,0.799,267,1.14,268,1.191,269,2.094,275,1.191,276,1.191,278,0.469,285,2.133,287,0.964,299,1.667,306,1.683,307,1.667,308,1.191,335,1.506,393,1.067,394,1.346,395,1.554,396,2.986,397,2.986,398,2.986,399,2.103,400,1.86,401,3.172,402,0.964,403,1.554,404,2.587,405,2.427,406,1.191,407,1.554,408,1.191,409,1.554,410,2.272,411,1.346,412,2.986,413,1.554,414,2.103,415,2.427,416,3.362,417,3.498,418,2.427,419,1.554,420,2.427,421,1.554,422,2.103,423,2.427,424,2.364,425,2.427,426,2.427,427,1.554,428,2.427,429,1.554,430,2.427,431,2.986,432,2.427,433,1.554,434,1.554,435,1.346,436,1.554,437,1.346,438,2.427,439,1.346,440,1.554,441,1.554,442,1.346,443,1.554,444,1.346,445,1.554,446,1.554,447,1.554,448,1.554,449,1.346,450,1.554,451,1.554,452,1.554,453,1.346,454,1.554,455,1.554,456,1.554,457,2.924,458,2.103,459,2.427,460,1.554,461,1.554,462,1.554,463,1.554,464,1.346,465,1.554,466,2.103,467,1.554,468,1.554,469,1.554,470,1.346,471,1.554,575,2.919,576,2.919,577,1.869,578,1.869,579,1.869,580,1.869,581,1.869,582,1.869,583,1.869,584,1.869]],["title/classes/RegisterPayload.html",[59,0.203,195,1.474]],["body/classes/RegisterPayload.html",[3,0.415,4,0.364,5,0.267,7,0.586,9,0.526,14,2.784,15,0.035,22,1.481,27,1.284,42,1.365,45,0.48,54,1.611,58,0.415,59,0.348,72,0.018,73,0.024,74,0.018,121,2.784,157,0.826,175,3.77,191,1.938,195,2.125,241,1.771,285,2.005,286,2.894,317,1.963,340,2.191,424,2.629,478,2.784,506,3.887,507,2.858,509,4.295,510,2.476,512,4.041,513,3.266,514,4.15,515,2.476,516,2.191,517,2.476,523,3.77,524,3.77,529,3.77,530,2.858,585,2.858,586,3.438,587,3.438,588,3.438,589,3.438,590,3.438,591,3.438]],["title/modules/WinstonModule.html",[36,0.72,89,1.796]],["body/modules/WinstonModule.html",[3,0.424,4,0.372,5,0.273,10,1.372,15,0.035,22,1.263,26,1.796,27,1.053,28,1.644,31,1.263,36,1.387,45,0.543,47,1.379,49,0.804,58,0.424,59,0.227,60,1.494,67,1.154,72,0.019,73,0.025,74,0.019,76,1.501,81,2.716,82,2.373,89,3.107,94,2.238,95,2.403,157,0.704,164,1.263,321,3.92,381,2.53,592,3.512,593,3.512,594,4.6,595,3.468,596,3.512,597,4.6,598,3.226,599,5.649,600,4.6,601,3.512,602,3.107,603,3.512,604,3.824,605,4.6,606,3.512,607,2.53,608,2.53,609,3.512,610,4.6,611,3.512,612,3.512,613,3.512]],["title/interfaces/WinstonModuleAsyncOptions.html",[278,0.789,602,1.796]],["body/interfaces/WinstonModuleAsyncOptions.html",[3,0.467,4,0.409,5,0.3,7,0.659,9,0.592,15,0.035,28,1.749,31,1.343,36,1.291,45,0.518,58,0.591,72,0.021,73,0.026,74,0.021,81,2.292,95,2.727,116,3.067,117,3.595,155,2.463,157,0.822,193,1.651,241,1.91,278,0.97,352,2.292,390,1.993,474,3.523,500,3.523,595,3.117,598,3.323,602,2.793,604,4.067,614,2.783,615,4.892,616,4.892,617,4.892,618,3.865,619,3.865,620,3.523,621,3.865]],["title/coverage.html",[622,3.078]],["body/coverage.html",[0,2.297,1,2.043,5,0.249,6,2.665,15,0.035,40,3.174,50,1.654,59,0.338,61,0.962,72,0.017,73,0.023,74,0.017,104,0.88,113,1.654,131,0.88,150,1.718,152,2.665,157,0.491,168,2.043,169,2.665,177,1.654,195,1.502,202,1.502,203,1.831,210,1.05,223,1.831,240,3.118,250,1.37,278,1.375,318,3.118,319,2.043,393,1.831,394,3.118,410,1.654,472,3.118,480,2.665,504,2.665,518,2.665,531,2.043,532,2.665,585,2.665,602,1.831,607,2.309,608,2.309,614,2.309,622,2.309,623,2.309,624,2.665,625,3.206,626,4.8,627,2.665,628,5.34,629,6.186,630,2.665,631,2.665,632,2.665,633,2.665,634,2.665,635,2.665,636,5.648,637,2.309,638,4.329,639,4.329,640,4.329,641,3.206,642,3.206,643,3.206,644,3.599,645,2.665,646,2.665,647,3.599,648,3.206,649,3.206]],["title/dependencies.html",[77,1.614,650,2.636]],["body/dependencies.html",[5,0.289,15,0.035,25,3.094,35,3.44,49,0.852,54,1.744,56,2.125,57,3.361,59,0.308,72,0.02,73,0.026,74,0.02,77,1.59,95,2.238,97,3.094,98,3.094,102,2.125,110,2.372,111,2.681,112,2.681,226,2.372,232,2.125,355,2.681,357,2.681,399,2.681,400,2.372,402,1.92,516,2.372,651,3.722,652,5.564,653,3.722,654,3.722,655,3.722,656,3.722,657,3.971,658,4.625,659,3.722,660,3.722,661,3.722,662,3.722,663,3.722,664,3.722,665,3.722,666,3.722,667,3.971,668,3.971,669,3.722,670,3.971,671,3.722,672,4.776,673,3.971,674,3.722,675,3.722,676,3.722,677,3.722,678,3.722,679,3.722,680,3.722,681,3.722,682,3.722,683,3.722,684,3.722,685,3.722,686,2.681,687,3.722,688,3.722,689,3.722,690,3.722,691,3.722]],["title/miscellaneous/enumerations.html",[692,1.36,693,3.141]],["body/miscellaneous/enumerations.html",[9,0.736,15,0.033,72,0.026,73,0.03,74,0.026,334,3.558,352,2.616,408,3.558,442,4.022,637,3.461,692,2.479,693,3.995,694,3.995]],["title/index.html",[9,0.404,695,2.192,696,2.192]],["body/index.html",[4,0.185,5,0.267,7,0.298,8,3.551,15,0.034,36,0.976,39,1.964,40,0.902,41,0.998,42,0.634,43,2.59,44,2.477,45,0.451,57,3.382,72,0.009,73,0.015,74,0.009,75,0.998,77,2.031,92,1.833,95,1.298,104,0.76,110,2.891,116,0.902,131,0.48,155,1.765,157,0.424,158,2.435,160,1.453,161,1.114,164,0.76,172,0.998,188,1.114,189,1.453,199,1.765,214,1.298,234,1.453,252,1.259,254,0.998,255,1.259,259,1.259,260,1.995,269,0.902,272,1.259,295,1.259,297,1.259,299,1.581,301,1.259,307,2.435,329,0.998,332,1.259,339,1.259,342,2.818,352,1.298,363,0.902,368,1.259,370,1.259,375,1.259,377,1.259,379,1.259,382,1.114,401,1.259,402,1.774,417,1.114,422,2.477,437,1.995,439,1.259,444,1.259,453,1.259,464,1.259,478,1.429,562,3.253,598,1.581,622,1.995,623,1.995,628,2.859,657,2.859,658,4.613,667,3.253,668,3.545,670,3.253,673,2.859,686,1.259,697,1.748,698,1.748,699,3.913,700,3.439,701,1.748,702,1.748,703,1.748,704,1.748,705,2.77,706,1.748,707,1.748,708,2.77,709,1.748,710,3.913,711,2.77,712,2.77,713,1.748,714,1.748,715,4.265,716,3.439,717,1.748,718,1.748,719,3.913,720,1.748,721,1.748,722,1.748,723,5.549,724,3.439,725,3.439,726,3.913,727,1.748,728,2.77,729,2.77,730,1.748,731,1.748,732,1.748,733,1.748,734,1.453,735,1.453,736,3.253,737,1.748,738,3.439,739,1.748,740,1.748,741,1.748,742,1.748,743,3.439,744,2.77,745,4.754,746,1.748,747,2.77,748,1.748,749,3.439,750,1.748,751,2.77,752,1.748,753,1.453,754,3.913,755,1.748,756,1.748,757,4.265,758,2.77,759,1.748,760,1.748,761,1.748,762,1.748,763,2.77,764,1.748,765,5.201,766,3.913,767,3.439,768,1.748,769,3.439,770,4.754,771,2.77,772,1.748,773,2.77,774,2.77,775,1.748,776,1.748,777,1.748,778,1.748,779,2.77,780,1.748,781,1.748,782,1.748,783,1.748,784,2.77,785,3.439,786,1.748,787,1.748,788,1.748,789,1.748,790,1.748,791,1.748,792,1.748,793,2.77,794,1.748,795,1.748,796,1.748,797,1.748,798,1.748,799,1.748,800,1.748,801,2.859,802,1.748,803,1.748,804,1.748,805,1.748,806,1.748,807,1.748,808,1.748,809,1.748,810,1.748,811,1.748,812,1.748,813,1.748,814,1.748,815,1.748,816,1.748,817,1.748,818,2.477,819,1.748,820,1.748,821,1.748,822,2.77,823,2.77,824,1.748,825,2.77,826,1.748,827,1.748,828,1.748,829,2.77,830,1.748,831,2.77,832,1.748,833,1.748,834,2.77,835,1.748,836,1.748,837,2.77,838,1.748,839,2.77,840,1.748,841,1.748,842,1.748,843,2.77,844,1.748,845,1.748,846,1.748,847,1.748,848,1.748,849,2.859,850,1.748,851,1.748,852,1.748,853,1.748,854,1.748,855,1.748,856,1.748,857,1.748,858,1.748,859,1.748,860,2.77,861,2.77,862,2.77,863,1.748,864,1.748,865,1.748,866,1.748,867,2.77,868,3.913,869,3.913,870,2.77,871,2.77,872,1.748,873,1.748,874,1.748,875,3.439,876,1.748,877,1.748,878,3.439,879,1.748,880,1.748,881,1.748,882,1.748,883,1.748,884,1.748,885,1.748,886,1.748,887,1.453,888,1.748,889,1.748,890,1.748,891,2.859,892,2.302,893,1.748,894,1.748,895,1.748,896,1.748,897,2.77,898,1.748,899,1.748,900,1.748,901,1.748,902,1.748,903,1.748,904,1.748,905,1.748,906,1.748,907,1.748,908,1.748,909,1.748,910,1.748,911,2.77,912,1.748,913,1.748,914,1.748,915,1.748,916,1.748,917,1.748,918,2.302,919,2.77,920,1.748,921,1.748,922,1.748,923,1.748,924,1.748,925,1.748,926,1.748,927,1.748,928,1.259,929,1.748]],["title/license.html",[695,2.192,696,2.192,928,1.899]],["body/license.html",[15,0.026,57,2.486,72,0.021,73,0.026,74,0.021,92,1.828,267,1.524,333,2.81,350,3.545,435,2.81,538,3.244,549,3.244,623,2.81,734,3.244,735,3.244,736,3.244,753,4.482,818,3.545,887,3.244,918,4.091,928,2.81,930,5.391,931,3.902,932,3.902,933,3.902,934,4.922,935,3.902,936,3.902,937,3.902,938,3.902,939,3.902,940,3.902,941,4.922,942,6.177,943,3.902,944,3.902,945,3.902,946,3.902,947,3.902,948,3.902,949,3.902,950,3.902,951,3.902,952,3.902,953,4.922,954,3.902,955,3.902,956,3.902,957,3.902,958,3.902,959,3.902,960,4.922,961,4.922,962,3.902,963,3.902,964,3.902,965,3.902,966,3.902,967,3.902,968,3.902,969,3.902,970,3.902,971,3.902,972,3.902,973,3.902,974,3.902,975,3.902,976,3.902,977,3.902,978,3.902,979,3.902,980,3.902,981,3.902,982,3.902,983,3.902,984,3.902,985,3.902]],["title/modules.html",[76,1.826]],["body/modules.html",[15,0.029,72,0.025,73,0.029,74,0.025,75,2.665,76,1.994,86,2.665,87,2.407,88,2.407,89,2.665,849,5.004,986,6.019,987,6.019,988,6.138,989,4.667,990,4.667]],["title/overview.html",[991,3.553]],["body/overview.html",[2,1.789,15,0.034,36,0.874,50,2.753,61,1.806,72,0.021,73,0.026,74,0.021,75,3.582,76,1.632,77,1.632,78,2.181,79,2.181,80,2.181,81,1.789,82,1.97,83,3.175,84,3.175,85,3.175,86,3.563,87,2.991,88,3.106,89,3.048,90,2.772,91,2.181,92,1.789,104,1.542,151,2.181,202,2.501,220,3.175,222,3.175,223,3.048,310,3.175,311,3.175,317,2.181,390,1.97,569,3.175,570,3.175,571,3.175,991,3.175,992,4.855,993,3.819,994,4.855]],["title/miscellaneous/typealiases.html",[692,1.36,995,3.778]],["body/miscellaneous/typealiases.html",[9,0.744,15,0.03,72,0.026,73,0.03,74,0.026,155,3.099,157,0.744,595,3.583,598,2.777,614,3.503,620,3.503,692,2.509,996,4.863,997,4.863]],["title/miscellaneous/variables.html",[329,2.157,692,1.36]],["body/miscellaneous/variables.html",[7,0.656,8,1.95,9,0.414,15,0.035,18,1.546,27,0.881,36,0.62,42,1.381,60,1.057,67,0.966,72,0.015,73,0.021,74,0.015,95,2.287,113,2.517,116,1.986,117,2.855,121,2.66,131,1.057,157,0.943,158,1.546,172,1.546,173,1.057,210,1.467,254,1.546,285,0.968,286,1.396,287,1.396,314,3.725,329,1.546,334,3.817,335,1.396,352,2.845,363,1.986,374,1.95,402,1.396,424,1.269,449,1.95,472,1.95,475,3.201,478,2.66,479,2.251,500,1.95,595,2.453,598,1.546,602,1.546,607,2.773,608,2.773,620,1.95,624,2.251,626,2.251,627,3.201,630,3.725,631,3.201,632,3.201,633,3.201,634,3.201,635,3.201,637,1.95,644,2.251,645,4.057,646,4.057,647,2.251,686,1.95,692,1.396,694,2.251,801,3.201,818,1.95,891,2.251,892,4.582,998,3.85,999,2.707,1000,5.512,1001,3.85,1002,5.156,1003,2.707,1004,2.707,1005,3.85,1006,3.85,1007,3.85,1008,2.707,1009,2.707,1010,2.707,1011,2.707,1012,2.707,1013,2.707,1014,2.707,1015,2.707,1016,2.707,1017,2.707,1018,2.707,1019,2.707,1020,2.707,1021,2.707]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["0.1.13",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["1.0",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.1",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":628,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["14d",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["16.1.7",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["201",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":932,"title":{},"body":{"license.html":{}}}],["20m",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":807,"title":{},"body":{"index.html":{}}}],["3",{"_index":993,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["3.21.1",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["4",{"_index":994,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":808,"title":{},"body":{"index.html":{}}}],["400",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["401",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":454,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["5",{"_index":992,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["5.7.3",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["6.8.2",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["8.1.0",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":889,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":775,"title":{},"body":{"index.html":{}}}],["_id",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{}}}],["above",{"_index":959,"title":{},"body":{"license.html":{}}}],["access",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["accesscontrolmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["accesscontrolmodule.forroles(roles",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["account",{"_index":434,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["acguard",{"_index":554,"title":{},"body":{"controllers/ProfileController.html":{}}}],["acguard)@useroles({resource",{"_index":536,"title":{},"body":{"controllers/ProfileController.html":{}}}],["action",{"_index":538,"title":{},"body":{"controllers/ProfileController.html":{},"license.html":{}}}],["admin",{"_index":442,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"miscellaneous/enumerations.html":{}}}],["again",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["against",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["aliases",{"_index":996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":804,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":923,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":951,"title":{},"body":{"license.html":{}}}],["angular",{"_index":708,"title":{},"body":{"index.html":{}}}],["another",{"_index":438,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["any'})@apiresponse({status",{"_index":540,"title":{},"body":{"controllers/ProfileController.html":{}}}],["api",{"_index":892,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["api/auth",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/docs",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/profile",{"_index":533,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apibearerauth",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["apimodelproperty",{"_index":512,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["apimodelproperty()@isemail()@isnotempty",{"_index":520,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty()@isnotempty()@minlength(8",{"_index":526,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty()@matches(/^[a",{"_index":522,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["apimodelproperty({required",{"_index":506,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["apiresponse",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apis",{"_index":896,"title":{},"body":{"index.html":{}}}],["apiusetags",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apiusetags(\"authentication",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiusetags(\"profile",{"_index":557,"title":{},"body":{"controllers/ProfileController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app.register(fastifyratelimiter",{"_index":836,"title":{},"body":{"index.html":{}}}],["app.register(headers",{"_index":835,"title":{},"body":{"index.html":{}}}],["app.roles",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.use",{"_index":842,"title":{},"body":{"index.html":{}}}],["app.use(headers",{"_index":841,"title":{},"body":{"index.html":{}}}],["app/app.roles",{"_index":409,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["app_env",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["app_url",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["applications",{"_index":705,"title":{},"body":{"index.html":{}}}],["applied",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["appmodule",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["approles",{"_index":408,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"miscellaneous/enumerations.html":{}}}],["approles.admin",{"_index":455,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["appservice",{"_index":50,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appurl",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["args",{"_index":621,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["arising",{"_index":984,"title":{},"body":{"license.html":{}}}],["array",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":441,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["associated",{"_index":333,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["async",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["asynchronous",{"_index":604,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["atlas",{"_index":732,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":168,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["authentication",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["authmodule",{"_index":86,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":929,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":975,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":202,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":440,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["available",{"_index":990,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["backend",{"_index":714,"title":{},"body":{"index.html":{}}}],["backers",{"_index":924,"title":{},"body":{"index.html":{}}}],["bad",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":404,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["base",{"_index":797,"title":{},"body":{"index.html":{}}}],["based",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["bearer",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{}}}],["being",{"_index":854,"title":{},"body":{"index.html":{}}}],["below",{"_index":749,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":815,"title":{},"body":{"index.html":{}}}],["between",{"_index":822,"title":{},"body":{"index.html":{}}}],["bloated",{"_index":852,"title":{},"body":{"index.html":{}}}],["body",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{}}}],["boilerplate",{"_index":710,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["both",{"_index":744,"title":{},"body":{"index.html":{}}}],["box",{"_index":719,"title":{},"body":{"index.html":{}}}],["browse",{"_index":988,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":986,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":700,"title":{},"body":{"index.html":{}}}],["built",{"_index":905,"title":{},"body":{"index.html":{}}}],["business",{"_index":908,"title":{},"body":{"index.html":{}}}],["c",{"_index":931,"title":{},"body":{"license.html":{}}}],["callback",{"_index":489,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["casting",{"_index":906,"title":{},"body":{"index.html":{}}}],["change",{"_index":821,"title":{},"body":{"index.html":{}}}],["changed",{"_index":817,"title":{},"body":{"index.html":{}}}],["charge",{"_index":938,"title":{},"body":{"license.html":{}}}],["check",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["checks",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["choose",{"_index":437,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["choosing",{"_index":812,"title":{},"body":{"index.html":{}}}],["claim",{"_index":978,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":317,"title":{},"body":{"classes/ConfigService.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"overview.html":{}}}],["cloud",{"_index":730,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":731,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":310,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":311,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":569,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":570,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_providers",{"_index":571,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["code",{"_index":825,"title":{},"body":{"index.html":{}}}],["collection",{"_index":810,"title":{},"body":{"index.html":{}}}],["comes",{"_index":715,"title":{},"body":{"index.html":{}}}],["command",{"_index":757,"title":{},"body":{"index.html":{}}}],["completed",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["completed'})@apiresponse({status",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["compose",{"_index":743,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":958,"title":{},"body":{"license.html":{}}}],["config",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["config.service",{"_index":313,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["config/config.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":87,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":104,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["configservice(\".env",{"_index":316,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.get(\"db_url",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"webtoken_expiration_time",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"webtoken_secret_key",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.isenv(\"dev",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.validateinput(config",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["configuration",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":916,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":776,"title":{},"body":{"index.html":{}}}],["connection",{"_index":734,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":834,"title":{},"body":{"index.html":{}}}],["const",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"index.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["constructor(config",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(filepath",{"_index":323,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["constructor(jwtservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["constructor(profilemodel",{"_index":577,"title":{},"body":{"injectables/ProfileService.html":{}}}],["contain",{"_index":327,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["container",{"_index":783,"title":{},"body":{"index.html":{}}}],["contract",{"_index":981,"title":{},"body":{"license.html":{}}}],["control",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller(\"api/auth",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"api/profile",{"_index":558,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["copies",{"_index":953,"title":{},"body":{"license.html":{}}}],["copy",{"_index":941,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":930,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":622,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":755,"title":{},"body":{"index.html":{}}}],["create",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["create(payload",{"_index":432,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["created",{"_index":431,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["createdprofile",{"_index":445,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["createdprofile.save",{"_index":456,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["createlogger(loggeropts",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["createtoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["createtoken(undefined",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["createwinstonasyncproviders",{"_index":607,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonasyncproviders(options",{"_index":612,"title":{},"body":{"modules/WinstonModule.html":{}}}],["createwinstonproviders",{"_index":608,"title":{},"body":{"modules/WinstonModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwinstonproviders(options",{"_index":611,"title":{},"body":{"modules/WinstonModule.html":{}}}],["crud",{"_index":396,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["crypto",{"_index":399,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["crypto.createhmac(\"sha256",{"_index":428,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["current",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":436,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["d",{"_index":453,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["daily",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":979,"title":{},"body":{"license.html":{}}}],["data",{"_index":417,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["database",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["date",{"_index":475,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["date%.log",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["date.now",{"_index":479,"title":{},"body":{"interfaces/IProfile.html":{},"miscellaneous/variables.html":{}}}],["datepattern",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["db_url",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["dd",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":943,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":985,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["declaring",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"classes/RegisterPayload.html":{}}}],["dedicated",{"_index":898,"title":{},"body":{"index.html":{}}}],["default",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default(\"dev",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["defaultmeta",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{}}}],["delete",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["delete(\":username",{"_index":566,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(':username')@useguards(undefined",{"_index":535,"title":{},"body":{"controllers/ProfileController.html":{}}}],["delete(username",{"_index":466,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["deleted",{"_index":470,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["demand",{"_index":880,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":77,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploying",{"_index":779,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":751,"title":{},"body":{"index.html":{}}}],["describe",{"_index":894,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":739,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":828,"title":{},"body":{"index.html":{}}}],["details",{"_index":914,"title":{},"body":{"index.html":{}}}],["determines",{"_index":795,"title":{},"body":{"index.html":{}}}],["dev",{"_index":796,"title":{},"body":{"index.html":{}}}],["development",{"_index":771,"title":{},"body":{"index.html":{}}}],["directory",{"_index":781,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":949,"title":{},"body":{"license.html":{}}}],["docker",{"_index":723,"title":{},"body":{"index.html":{}}}],["docs",{"_index":878,"title":{},"body":{"index.html":{}}}],["document",{"_index":473,"title":{},"body":{"interfaces/IProfile.html":{}}}],["documentation",{"_index":623,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":486,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["dto",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["dynamicmodule",{"_index":599,"title":{},"body":{"modules/WinstonModule.html":{}}}],["e2e",{"_index":870,"title":{},"body":{"index.html":{}}}],["each",{"_index":444,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["edit",{"_index":457,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["edit(payload",{"_index":459,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["efficient",{"_index":701,"title":{},"body":{"index.html":{}}}],["email",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["encrypt/decrypt",{"_index":802,"title":{},"body":{"index.html":{}}}],["end",{"_index":886,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ensures",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["enumerations",{"_index":693,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["env.example",{"_index":756,"title":{},"body":{"index.html":{}}}],["envconfig",{"_index":319,"title":{"interfaces/EnvConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["environment",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["envvarsschema",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["envvarsschema.validate",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error(`config",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error.message",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["especially",{"_index":853,"title":{},"body":{"index.html":{}}}],["event",{"_index":974,"title":{},"body":{"license.html":{}}}],["exec",{"_index":422,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["execute",{"_index":780,"title":{},"body":{"index.html":{}}}],["executing",{"_index":794,"title":{},"body":{"index.html":{}}}],["exist",{"_index":463,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["existing",{"_index":759,"title":{},"body":{"index.html":{}}}],["exists",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{}}}],["exp",{"_index":502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["expire",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["expires",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["expiresin",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresprettyprint",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["export",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["exports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"overview.html":{}}}],["exposed",{"_index":773,"title":{},"body":{"index.html":{}}}],["express",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["extends",{"_index":474,"title":{},"body":{"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":617,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["failed",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["false",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fastify",{"_index":658,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastifyadapter",{"_index":829,"title":{},"body":{"index.html":{}}}],["fastifyratelimiter",{"_index":832,"title":{},"body":{"index.html":{}}}],["features",{"_index":718,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":546,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fetches",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["field",{"_index":509,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["fields",{"_index":430,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["filepath",{"_index":325,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["files",{"_index":887,"title":{},"body":{"index.html":{},"license.html":{}}}],["findone",{"_index":427,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["fitness",{"_index":971,"title":{},"body":{"license.html":{}}}],["folder",{"_index":884,"title":{},"body":{"index.html":{}}}],["follow",{"_index":746,"title":{},"body":{"index.html":{}}}],["following",{"_index":736,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["formats",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["forroot",{"_index":593,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forroot(options",{"_index":594,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync",{"_index":600,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forrootasync(options",{"_index":601,"title":{},"body":{"modules/WinstonModule.html":{}}}],["forward",{"_index":902,"title":{},"body":{"index.html":{}}}],["found",{"_index":562,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["framework",{"_index":699,"title":{},"body":{"index.html":{}}}],["free",{"_index":937,"title":{},"body":{"license.html":{}}}],["front",{"_index":885,"title":{},"body":{"index.html":{}}}],["fs",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["function",{"_index":616,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["furnished",{"_index":956,"title":{},"body":{"license.html":{}}}],["further",{"_index":913,"title":{},"body":{"index.html":{}}}],["generate",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["generated",{"_index":879,"title":{},"body":{"index.html":{}}}],["get(\":username",{"_index":559,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(\"request/user",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':username')@useguards(undefined)@apiresponse({status",{"_index":545,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('request/user')@useguards(undefined)@apiresponse({status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apiresponse({status",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["get(id",{"_index":418,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["get(key",{"_index":330,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["getbyusername",{"_index":575,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusername(username",{"_index":420,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["getbyusernameandpass",{"_index":576,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getbyusernameandpass(username",{"_index":425,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["getprofile",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["getprofile(@param(\"username",{"_index":560,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(username",{"_index":544,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getstring",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":695,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":876,"title":{},"body":{"index.html":{}}}],["given",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":605,"title":{},"body":{"modules/WinstonModule.html":{}}}],["grab",{"_index":733,"title":{},"body":{"index.html":{}}}],["granted",{"_index":936,"title":{},"body":{"license.html":{}}}],["graph",{"_index":989,"title":{},"body":{"modules.html":{}}}],["gravatar",{"_index":400,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["gravatar.url(payload.email",{"_index":447,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["grow",{"_index":920,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["hashed",{"_index":423,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["header",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":831,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":706,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":670,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["here",{"_index":927,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":935,"title":{},"body":{"license.html":{}}}],["holders",{"_index":976,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":910,"title":{},"body":{"index.html":{}}}],["hosting",{"_index":888,"title":{},"body":{"index.html":{}}}],["hour",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["hours",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["hrf",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["http",{"_index":449,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:27017",{"_index":790,"title":{},"body":{"index.html":{}}}],["http://localhost:9000",{"_index":789,"title":{},"body":{"index.html":{}}}],["https",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["iat",{"_index":501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":415,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["identifier",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["igenericmessagebody",{"_index":393,"title":{"interfaces/IGenericMessageBody.html":{}},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["images",{"_index":786,"title":{},"body":{"index.html":{}}}],["implied",{"_index":967,"title":{},"body":{"license.html":{}}}],["import",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}}}],["included",{"_index":962,"title":{},"body":{"license.html":{}}}],["includes",{"_index":904,"title":{},"body":{"index.html":{}}}],["including",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":391,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["indicating",{"_index":805,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["inject",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inject(\"winston",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["injected",{"_index":328,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["injecting",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectmodel",{"_index":403,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["injectmodel(\"profile",{"_index":413,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["inspired",{"_index":707,"title":{},"body":{"index.html":{}}}],["install",{"_index":764,"title":{},"body":{"index.html":{}}}],["instead",{"_index":819,"title":{},"body":{"index.html":{}}}],["interface",{"_index":278,"title":{"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":390,"title":{},"body":{"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["ip",{"_index":844,"title":{},"body":{"index.html":{}}}],["iprofile",{"_index":250,"title":{"interfaces/IProfile.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["isalphanumeric",{"_index":513,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["isemail",{"_index":529,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["isenv",{"_index":320,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenv(env",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["isnotempty",{"_index":514,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["it's",{"_index":806,"title":{},"body":{"index.html":{}}}],["itokenreturnbody",{"_index":203,"title":{"interfaces/ITokenReturnBody.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"coverage.html":{}}}],["javascript",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.number().default(1800",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.object",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.objectschema",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().regex(/^mongodb",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().required",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string().uri",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["join",{"_index":926,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["jwtstrategy",{"_index":223,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":332,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["kind",{"_index":966,"title":{},"body":{"license.html":{}}}],["leave",{"_index":851,"title":{},"body":{"index.html":{}}}],["legend",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["level",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":980,"title":{},"body":{"license.html":{}}}],["liable",{"_index":977,"title":{},"body":{"license.html":{}}}],["license",{"_index":928,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":919,"title":{},"body":{"index.html":{}}}],["limit",{"_index":668,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":945,"title":{},"body":{"license.html":{}}}],["limited",{"_index":968,"title":{},"body":{"license.html":{}}}],["line",{"_index":737,"title":{},"body":{"index.html":{}}}],["lines",{"_index":824,"title":{},"body":{"index.html":{}}}],["loads",{"_index":782,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":763,"title":{},"body":{"index.html":{}}}],["locally",{"_index":727,"title":{},"body":{"index.html":{}}}],["location",{"_index":900,"title":{},"body":{"index.html":{}}}],["logger",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loggeroptions",{"_index":620,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loggeropts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":716,"title":{},"body":{"index.html":{}}}],["logic",{"_index":909,"title":{},"body":{"index.html":{}}}],["login",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"classes/LoginPayload.html":{}}}],["login(@body",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["login/register",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["loginpayload",{"_index":177,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"classes/LoginPayload.html":{},"coverage.html":{}}}],["logs",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["logs/application",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":711,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":826,"title":{},"body":{"index.html":{}}}],["mainly",{"_index":798,"title":{},"body":{"index.html":{}}}],["make",{"_index":724,"title":{},"body":{"index.html":{}}}],["manual",{"_index":752,"title":{},"body":{"index.html":{}}}],["mapping",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["matches",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["matches(/^[a",{"_index":530,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["matching",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor((ntime",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["math.floor(ntime",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["max",{"_index":837,"title":{},"body":{"index.html":{}}}],["maxfiles",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":970,"title":{},"body":{"license.html":{}}}],["merge",{"_index":947,"title":{},"body":{"license.html":{}}}],["message",{"_index":398,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["method",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["minlength",{"_index":515,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["minlength(8",{"_index":517,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["mins",{"_index":809,"title":{},"body":{"index.html":{}}}],["minute",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["minutes",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["miscellaneous",{"_index":692,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":918,"title":{},"body":{"index.html":{},"license.html":{}}}],["mm",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":401,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["models",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{}}}],["modify",{"_index":735,"title":{},"body":{"index.html":{},"license.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":618,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["modules",{"_index":76,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/app/app.roles",{"_index":477,"title":{},"body":{"interfaces/IProfile.html":{}}}],["modules/auth/payload/register.payload",{"_index":407,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["mongo",{"_index":729,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":726,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":402,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{}}}],["mongoosemodule.forfeature",{"_index":574,"title":{},"body":{"modules/ProfileModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":911,"title":{},"body":{"index.html":{}}}],["moving",{"_index":850,"title":{},"body":{"index.html":{}}}],["msanvarov",{"_index":933,"title":{},"body":{"license.html":{}}}],["mutated",{"_index":458,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/JwtStrategy.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["nest",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProfileController.html":{},"dependencies.html":{},"index.html":{}}}],["nestfactory.create",{"_index":833,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":840,"title":{},"body":{"index.html":{}}}],["nestfastifyapplication",{"_index":830,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":619,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["nestjs/core",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IGenericMessageBody.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":657,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/swagger",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":698,"title":{},"body":{"index.html":{}}}],["non",{"_index":722,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":973,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":405,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["note",{"_index":847,"title":{},"body":{"index.html":{}}}],["notice",{"_index":960,"title":{},"body":{"license.html":{}}}],["npm",{"_index":765,"title":{},"body":{"index.html":{}}}],["ntime",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["number",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["number(time",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["object",{"_index":326,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["obtaining",{"_index":940,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":859,"title":{},"body":{"index.html":{}}}],["offers",{"_index":813,"title":{},"body":{"index.html":{}}}],["one",{"_index":439,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["ones",{"_index":827,"title":{},"body":{"index.html":{}}}],["open",{"_index":891,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["operating",{"_index":742,"title":{},"body":{"index.html":{}}}],["operation",{"_index":397,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["options",{"_index":598,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":613,"title":{},"body":{"modules/WinstonModule.html":{}}}],["options.inject",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.usefactory",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":983,"title":{},"body":{"license.html":{}}}],["out",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":748,"title":{},"body":{"index.html":{}}}],["over",{"_index":816,"title":{},"body":{"index.html":{}}}],["overview",{"_index":991,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":650,"title":{"dependencies.html":{}},"body":{}}],["package.jsoncomes",{"_index":848,"title":{},"body":{"index.html":{}}}],["pages",{"_index":877,"title":{},"body":{"index.html":{}}}],["param",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["param(\"username",{"_index":567,"title":{},"body":{"controllers/ProfileController.html":{}}}],["parameter",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{}}}],["parse",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["parse(fs.readfilesync(filepath",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["partial",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["particular",{"_index":549,"title":{},"body":{"controllers/ProfileController.html":{},"license.html":{}}}],["passport",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":424,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["password).digest(\"hex",{"_index":429,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["patch",{"_index":519,"title":{},"body":{"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{}}}],["patch()@useguards(undefined)@useroles({resource",{"_index":551,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile",{"_index":534,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile(@body",{"_index":564,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofile(payload",{"_index":550,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patchprofilepayload",{"_index":410,"title":{"classes/PatchProfilePayload.html":{}},"body":{"interfaces/IGenericMessageBody.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["paylaod",{"_index":505,"title":{},"body":{"classes/LoginPayload.html":{}}}],["payload",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{}}}],["payload.password",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["payload.password).digest(\"hex",{"_index":446,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["payload.username",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["payload/login.payload",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["payload/patch.profile.payload",{"_index":411,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["payload/register.payload",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["per",{"_index":846,"title":{},"body":{"index.html":{}}}],["performance",{"_index":814,"title":{},"body":{"index.html":{}}}],["permission",{"_index":934,"title":{},"body":{"license.html":{}}}],["permit",{"_index":954,"title":{},"body":{"license.html":{}}}],["person",{"_index":939,"title":{},"body":{"license.html":{}}}],["personal",{"_index":760,"title":{},"body":{"index.html":{}}}],["persons",{"_index":955,"title":{},"body":{"license.html":{}}}],["pg",{"_index":452,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["pick",{"_index":615,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{}}}],["please",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["populated",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["port",{"_index":774,"title":{},"body":{"index.html":{}}}],["portions",{"_index":964,"title":{},"body":{"license.html":{}}}],["possession",{"_index":539,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apiresponse({status",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiresponse({status",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["pre",{"_index":768,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":741,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["prerequisites",{"_index":721,"title":{},"body":{"index.html":{}}}],["prettyprintseconds",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["prettyprintseconds(time",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["private",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["proceed",{"_index":820,"title":{},"body":{"index.html":{}}}],["prod",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["produce",{"_index":883,"title":{},"body":{"index.html":{}}}],["production",{"_index":769,"title":{},"body":{"index.html":{}}}],["profile",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile.controller",{"_index":573,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.deletedcount",{"_index":469,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["profile.model",{"_index":406,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{}}}],["profile.service",{"_index":556,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.model",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["profile/profile.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["profile/profile.service",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{}}}],["profilecontroller",{"_index":531,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodel",{"_index":412,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["profilemodule",{"_index":88,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":537,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profileservice",{"_index":61,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":697,"title":{},"body":{"index.html":{}}}],["project",{"_index":785,"title":{},"body":{"index.html":{}}}],["promise",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["properties",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["protocol",{"_index":448,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["prototype",{"_index":713,"title":{},"body":{"index.html":{}}}],["provide",{"_index":314,"title":{},"body":{"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":435,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"license.html":{}}}],["provider",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"overview.html":{}}}],["provides",{"_index":897,"title":{},"body":{"index.html":{}}}],["public",{"_index":610,"title":{},"body":{"modules/WinstonModule.html":{}}}],["publish",{"_index":948,"title":{},"body":{"license.html":{}}}],["purge",{"_index":860,"title":{},"body":{"index.html":{}}}],["purger",{"_index":857,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":972,"title":{},"body":{"license.html":{}}}],["queried",{"_index":416,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["query",{"_index":907,"title":{},"body":{"index.html":{}}}],["quickly",{"_index":712,"title":{},"body":{"index.html":{}}}],["r",{"_index":451,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["random",{"_index":803,"title":{},"body":{"index.html":{}}}],["rate",{"_index":667,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ratelimiter",{"_index":839,"title":{},"body":{"index.html":{}}}],["react",{"_index":777,"title":{},"body":{"index.html":{}}}],["read",{"_index":793,"title":{},"body":{"index.html":{}}}],["readable",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["readonly",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["received",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["received'})@apiresponse({status",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["recommended",{"_index":856,"title":{},"body":{"index.html":{}}}],["records",{"_index":471,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["reflect",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterPayload.html":{}}}],["register(@body",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["registerpayload",{"_index":195,"title":{"classes/RegisterPayload.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"coverage.html":{}}}],["registration",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["remove",{"_index":543,"title":{},"body":{"controllers/ProfileController.html":{}}}],["removed",{"_index":800,"title":{},"body":{"index.html":{}}}],["removes",{"_index":542,"title":{},"body":{"controllers/ProfileController.html":{}}}],["removing",{"_index":861,"title":{},"body":{"index.html":{}}}],["replace",{"_index":758,"title":{},"body":{"index.html":{}}}],["represents",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{}}}],["req",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["request'})@apiresponse({status",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":845,"title":{},"body":{"index.html":{}}}],["required",{"_index":478,"title":{},"body":{"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}],["resolve",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["resource",{"_index":563,"title":{},"body":{"controllers/ProfileController.html":{}}}],["respectively",{"_index":791,"title":{},"body":{"index.html":{}}}],["response",{"_index":395,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["restful",{"_index":895,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":944,"title":{},"body":{"license.html":{}}}],["result",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":548,"title":{},"body":{"controllers/ProfileController.html":{}}}],["return",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{}}}],["rights",{"_index":946,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["rm",{"_index":862,"title":{},"body":{"index.html":{}}}],["role",{"_index":443,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["roles",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesbuilder",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":153,"title":{},"body":{"injectables/AppService.html":{}}}],["rotate",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["rotatefile",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["run",{"_index":770,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":450,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["save",{"_index":865,"title":{},"body":{"index.html":{}}}],["saveif",{"_index":864,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":702,"title":{},"body":{"index.html":{}}}],["schema",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IProfile.html":{},"modules/ProfileModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema.types.objectid",{"_index":476,"title":{},"body":{"interfaces/IProfile.html":{}}}],["scheme",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["schemes",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["seconds",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["secret",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["secretorkey",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":717,"title":{},"body":{"index.html":{}}}],["sell",{"_index":952,"title":{},"body":{"license.html":{}}}],["server",{"_index":703,"title":{},"body":{"index.html":{}}}],["service",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{}}}],["set",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["settings",{"_index":761,"title":{},"body":{"index.html":{}}}],["setup",{"_index":740,"title":{},"body":{"index.html":{}}}],["shall",{"_index":961,"title":{},"body":{"license.html":{}}}],["short",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showcase",{"_index":799,"title":{},"body":{"index.html":{}}}],["side",{"_index":704,"title":{},"body":{"index.html":{}}}],["signed",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["signoptions",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["simply",{"_index":881,"title":{},"body":{"index.html":{}}}],["software",{"_index":942,"title":{},"body":{"license.html":{}}}],["solution",{"_index":903,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"index.html":{}}}],["specification",{"_index":893,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":922,"title":{},"body":{"index.html":{}}}],["src/.../app.roles.ts",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.model.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.constants.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.interfaces.ts",{"_index":997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../winston.providers.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/modules/app/app.controller.ts:28",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.controller.ts:41",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["src/modules/app/app.module.ts",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["src/modules/app/app.roles.ts",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/modules/app/app.service.ts",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/modules/app/app.service.ts:24",{"_index":159,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/app/app.service.ts:9",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:32",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:45",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:35",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:56",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:74",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:90",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:35",{"_index":487,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/payload/login.payload.ts",{"_index":504,"title":{},"body":{"classes/LoginPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/login.payload.ts:16",{"_index":511,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/login.payload.ts:26",{"_index":508,"title":{},"body":{"classes/LoginPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts",{"_index":585,"title":{},"body":{"classes/RegisterPayload.html":{},"coverage.html":{}}}],["src/modules/auth/payload/register.payload.ts:22",{"_index":587,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:32",{"_index":591,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:42",{"_index":589,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/auth/payload/register.payload.ts:52",{"_index":590,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["src/modules/config/config.module.ts",{"_index":312,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/modules/config/config.service.ts",{"_index":318,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/modules/config/config.service.ts:19",{"_index":324,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:36",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:70",{"_index":331,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:79",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/modules/config/config.service.ts:8",{"_index":392,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts",{"_index":518,"title":{},"body":{"classes/PatchProfilePayload.html":{},"coverage.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:20",{"_index":521,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:30",{"_index":528,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:38",{"_index":525,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/payload/patch.profile.payload.ts:46",{"_index":527,"title":{},"body":{"classes/PatchProfilePayload.html":{}}}],["src/modules/profile/profile.controller.ts",{"_index":532,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/modules/profile/profile.controller.ts:40",{"_index":547,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:64",{"_index":553,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.controller.ts:82",{"_index":541,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/modules/profile/profile.model.ts",{"_index":472,"title":{},"body":{"interfaces/IProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/profile/profile.module.ts",{"_index":572,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/modules/profile/profile.service.ts",{"_index":394,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/modules/profile/profile.service.ts:104",{"_index":581,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:123",{"_index":580,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:29",{"_index":578,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:43",{"_index":582,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:52",{"_index":583,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:62",{"_index":584,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/profile/profile.service.ts:76",{"_index":579,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/modules/winston/winston.constants.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/winston/winston.interfaces.ts",{"_index":614,"title":{},"body":{"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/winston/winston.module.ts",{"_index":592,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:21",{"_index":596,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.module.ts:35",{"_index":603,"title":{},"body":{"modules/WinstonModule.html":{}}}],["src/modules/winston/winston.providers.ts",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srv",{"_index":762,"title":{},"body":{"index.html":{}}}],["stack",{"_index":788,"title":{},"body":{"index.html":{}}}],["start",{"_index":767,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":772,"title":{},"body":{"index.html":{}}}],["started",{"_index":696,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":787,"title":{},"body":{"index.html":{}}}],["statements",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":321,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"modules/WinstonModule.html":{}}}],["status",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["steps",{"_index":747,"title":{},"body":{"index.html":{}}}],["straight",{"_index":901,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":957,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":950,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":963,"title":{},"body":{"license.html":{}}}],["super",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":849,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":725,"title":{},"body":{"index.html":{}}}],["svg",{"_index":987,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":673,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger_api_auth_location",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_auth_name",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_current_version",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_description",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_name",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_root",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swagger_api_schemes",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":464,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["table",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":869,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":873,"title":{},"body":{"index.html":{}}}],["test:covnon",{"_index":872,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":871,"title":{},"body":{"index.html":{}}}],["testing",{"_index":866,"title":{},"body":{"index.html":{}}}],["tests",{"_index":868,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":921,"title":{},"body":{"index.html":{}}}],["then(profile",{"_index":468,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.appservice.root",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.config.get(\"app_url",{"_index":166,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get(\"webtoken_expiration_time",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["this.envconfig",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig.app_env",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.envconfig[key",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.expiration",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["this.getbyusername(payload.username",{"_index":433,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.getbyusername(username",{"_index":465,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.jwtservice.sign",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["this.logger.info(\"logging",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prettyprintseconds(this.expiration",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["this.profilemodel",{"_index":426,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.profilemodel.deleteone",{"_index":467,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.profilemodel.findbyid(id).exec",{"_index":419,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.profilemodel.findone",{"_index":421,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.profilemodel.updateone",{"_index":461,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["this.profileservice.create(payload",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.profileservice.delete(username",{"_index":568,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.edit(payload",{"_index":565,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyusername(username",{"_index":561,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.getbyusernameandpass",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["throw",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["thus",{"_index":855,"title":{},"body":{"index.html":{}}}],["time",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"index.html":{}}}],["timediff",{"_index":503,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timewindow",{"_index":838,"title":{},"body":{"index.html":{}}}],["token",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["tort",{"_index":982,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IProfile.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":510,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@isemail()@isnotempty",{"_index":586,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":507,"title":{},"body":{"classes/LoginPayload.html":{},"classes/RegisterPayload.html":{}}}],["true})@matches(/^[a",{"_index":588,"title":{},"body":{"classes/RegisterPayload.html":{}}}],["try",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{}}}],["two",{"_index":823,"title":{},"body":{"index.html":{}}}],["type",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":995,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":875,"title":{},"body":{"index.html":{}}}],["typeorm",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/express",{"_index":863,"title":{},"body":{"index.html":{}}}],["typical",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/ProfileService.html":{}}}],["typing",{"_index":882,"title":{},"body":{"index.html":{}}}],["ui",{"_index":686,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{}}}],["unit",{"_index":867,"title":{},"body":{"index.html":{}}}],["unused",{"_index":858,"title":{},"body":{"index.html":{}}}],["up",{"_index":784,"title":{},"body":{"index.html":{}}}],["update",{"_index":552,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updatedprofile",{"_index":460,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["updatedprofile.nmodified",{"_index":462,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"injectables/ProfileService.html":{}}}],["uri",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["use",{"_index":818,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":801,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["useguards(authguard(\"jwt",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProfileController.html":{}}}],["usenewurlparser",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{}}}],["username",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"interfaces/ITokenReturnBody.html":{},"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterPayload.html":{},"miscellaneous/variables.html":{}}}],["useroles",{"_index":555,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["useunifiedtopology",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":315,"title":{},"body":{"modules/ConfigModule.html":{}}}],["using",{"_index":754,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":728,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":414,"title":{},"body":{"interfaces/IGenericMessageBody.html":{},"interfaces/IProfile.html":{},"injectables/ProfileService.html":{}}}],["valid",{"_index":488,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["valid(\"dev",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validate",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validatedenvconfig",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validateinput",{"_index":322,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validates",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["validateuser",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(payload",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITokenReturnBody.html":{}}}],["validation",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["validator",{"_index":516,"title":{},"body":{"classes/LoginPayload.html":{},"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{},"dependencies.html":{}}}],["value",{"_index":334,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["variable",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"index.html":{}}}],["variables",{"_index":329,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":912,"title":{},"body":{"index.html":{}}}],["vue",{"_index":778,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":969,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":965,"title":{},"body":{"license.html":{}}}],["web",{"_index":745,"title":{},"body":{"index.html":{}}}],["webtoken_expiration_time",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["webtoken_secret_key",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["whether",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/IGenericMessageBody.html":{},"interfaces/ITokenReturnBody.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"license.html":{}}}],["windowms",{"_index":843,"title":{},"body":{"index.html":{}}}],["winson",{"_index":597,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.interfaces",{"_index":606,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.providers",{"_index":609,"title":{},"body":{"modules/WinstonModule.html":{}}}],["winston.transports.console",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["winston/winston.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_options",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winston_module_provider",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":89,"title":{"modules/WinstonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WinstonModule.html":{},"modules.html":{},"overview.html":{}}}],["winstonmodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleasyncoptions",{"_index":602,"title":{"interfaces/WinstonModuleAsyncOptions.html":{}},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmoduleoptions",{"_index":595,"title":{},"body":{"modules/WinstonModule.html":{},"interfaces/WinstonModuleAsyncOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":753,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":899,"title":{},"body":{"index.html":{}}}],["x1f3d7",{"_index":811,"title":{},"body":{"index.html":{}}}],["x1f433",{"_index":738,"title":{},"body":{"index.html":{}}}],["x1f465",{"_index":917,"title":{},"body":{"index.html":{}}}],["x1f4a1",{"_index":874,"title":{},"body":{"index.html":{}}}],["x1f4da",{"_index":709,"title":{},"body":{"index.html":{}}}],["x1f4dd",{"_index":890,"title":{},"body":{"index.html":{}}}],["x1f50a",{"_index":915,"title":{},"body":{"index.html":{}}}],["x1f512",{"_index":792,"title":{},"body":{"index.html":{}}}],["x1f680",{"_index":750,"title":{},"body":{"index.html":{}}}],["x1f6e0",{"_index":720,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":766,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":925,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":524,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["za",{"_index":523,"title":{},"body":{"classes/PatchProfilePayload.html":{},"classes/RegisterPayload.html":{}}}],["zippedarchive",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ProfileModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                getString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('request/user')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:41\n                \n            \n\n\n            \n                \n                    Fetches request metadata\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the request body\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        the request user populated from the passport module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiResponse({status: 200, description: 'Request Received'})@ApiResponse({status: 400, description: 'Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/app/app.controller.ts:28\n                \n            \n\n\n            \n                \n                    Returns the an environment variable from config file\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application environment url\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Delete, Get, Param, Req, UseGuards } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\nimport { ApiBearerAuth, ApiResponse } from \"@nestjs/swagger\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { Request } from \"express\";\n\n/**\n * App Controller\n */\n@Controller()\n@ApiBearerAuth()\nexport class AppController {\n  /**\n   * Constructor\n   * @param appService\n   * @param profileService\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returns the an environment variable from config file\n   * @returns {string} the application environment url\n   */\n  @Get()\n  @UseGuards(AuthGuard(\"jwt\"))\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getString(): string {\n    return this.appService.root();\n  }\n\n  /**\n   * Fetches request metadata\n   * @param {Req} req the request body\n   * @returns {Partial} the request user populated from the passport module\n   */\n  @Get(\"request/user\")\n  @UseGuards(AuthGuard(\"jwt\"))\n  @ApiResponse({ status: 200, description: \"Request Received\" })\n  @ApiResponse({ status: 400, description: \"Request Failed\" })\n  getProfile(@Req() req): Partial {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            WinstonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as winston from \"winston\";\nimport * as rotateFile from \"winston-daily-rotate-file\";\nimport { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { MongooseModule, MongooseModuleAsyncOptions } from \"@nestjs/mongoose\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { WinstonModule } from \"../winston/winston.module\";\nimport { AccessControlModule } from \"nest-access-control\";\nimport { roles } from \"./app.roles\";\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          uri: configService.get(\"DB_URL\"),\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n        } as MongooseModuleAsyncOptions),\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.isEnv(\"dev\")\n          ? {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: \"info\",\n              format: winston.format.json(),\n              defaultMeta: { service: \"user-service\" },\n              transports: [\n                new winston.transports.File({\n                  filename: \"logs/error.log\",\n                  level: \"error\",\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new rotateFile({\n                  filename: \"logs/application-%DATE%.log\",\n                  datePattern: \"YYYY-MM-DD\",\n                  zippedArchive: true,\n                  maxSize: \"20m\",\n                  maxFiles: \"14d\",\n                }),\n              ],\n            };\n      },\n    }),\n    AccessControlModule.forRoles(roles),\n    ConfigModule,\n    AuthModule,\n    ProfileModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/app/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/modules/app/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration service\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logger service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/app/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Fetches and logs the APP_URL environment variable from the configuration file.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the application url\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigService } from \"../config/config.service\";\nimport { Logger } from \"winston\";\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {ConfigService} config configuration service\n   * @param {Logger} logger logger service\n   */\n  constructor(\n    private config: ConfigService,\n    @Inject(\"winston\") private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Fetches and logs the APP_URL environment variable from the configuration file.\n   * @returns {string} the application url\n   */\n  root(): string {\n    const appURL = this.config.get(\"APP_URL\");\n    this.logger.info(\"Logging the APP_URL -> \" + appURL);\n    return appURL;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n                    Login route to validate and create tokens for users\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n                    Registration route to create and generate tokens for users\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post } from \"@nestjs/common\";\nimport { ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { AuthService, ITokenReturnBody } from \"./auth.service\";\nimport { LoginPayload } from \"./payload/login.payload\";\nimport { RegisterPayload } from \"./payload/register.payload\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Authentication Controller\n */\n@Controller(\"api/auth\")\n@ApiUseTags(\"authentication\")\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly profileService: ProfileService,\n  ) {}\n\n  /**\n   * Login route to validate and create tokens for users\n   * @param {LoginPayload} payload the login dto\n   */\n  @Post(\"login\")\n  @ApiResponse({ status: 201, description: \"Login Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async login(@Body() payload: LoginPayload): Promise {\n    const user = await this.authService.validateUser(payload);\n    return await this.authService.createToken(user);\n  }\n\n  /**\n   * Registration route to create and generate tokens for users\n   * @param {RegisterPayload} payload the registration dto\n   */\n  @Post(\"register\")\n  @ApiResponse({ status: 201, description: \"Registration Completed\" })\n  @ApiResponse({ status: 400, description: \"Bad Request\" })\n  @ApiResponse({ status: 401, description: \"Unauthorized\" })\n  async register(@Body() payload: RegisterPayload): Promise {\n    const user = await this.profileService.create(payload);\n    return await this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            ProfileModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { ConfigModule } from \"../config/config.module\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileModule } from \"../profile/profile.module\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./jwt.strategy\";\nimport { AuthController } from \"./auth.controller\";\n\n@Module({\n  imports: [\n    ProfileModule,\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: \"jwt\" }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n          signOptions: {\n            ...(configService.get(\"WEBTOKEN_EXPIRATION_TIME\")\n              ? {\n                  expiresIn: Number(\n                    configService.get(\"WEBTOKEN_EXPIRATION_TIME\"),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [PassportModule.register({ defaultStrategy: \"jwt\" })],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Private\n                                prettyPrintSeconds\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                profile service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: IProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on IProfile payload\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        token body\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            prettyPrintSeconds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prettyPrintSeconds(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:74\n                \n            \n\n\n            \n                \n                    Formats the time in seconds into human-readable format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        hrf time\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(payload: LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:90\n                \n            \n\n\n            \n                \n                    Validates whether or not the profile exists in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        login payload to authenticate with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        registered profile\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            expiration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:35\n                            \n                        \n\n                \n                    \n                        Time in seconds when the token is to expire\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { IProfile } from \"../profile/profile.model\";\nimport { LoginPayload } from \"./payload/login.payload\";\n\n/**\n * Models a typical Login/Register route return body\n */\nexport interface ITokenReturnBody {\n  /**\n   * When the token is to expire in seconds\n   */\n  expires: string;\n  /**\n   * A human-readable format of expires\n   */\n  expiresPrettyPrint: string;\n  /**\n   * The Bearer token\n   */\n  token: string;\n}\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {string}\n   */\n  private readonly expiration: string;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    this.expiration = this.configService.get(\"WEBTOKEN_EXPIRATION_TIME\");\n  }\n\n  /**\n   * Creates a signed jwt token based on IProfile payload\n   * @param {Profile} param dto to generate token from\n   * @returns {Promise} token body\n   */\n  async createToken({\n    _id,\n    username,\n    email,\n    avatar,\n  }: IProfile): Promise {\n    return {\n      expires: this.expiration,\n      expiresPrettyPrint: this.prettyPrintSeconds(this.expiration),\n      token: this.jwtService.sign({ _id, username, email, avatar }),\n    };\n  }\n\n  /**\n   * Formats the time in seconds into human-readable format\n   * @param {string} time\n   * @returns {string} hrf time\n   */\n  private prettyPrintSeconds(time: string): string {\n    const ntime = Number(time);\n    const hours = Math.floor(ntime / 3600);\n    const minutes = Math.floor((ntime % 3600) / 60);\n    const seconds = Math.floor((ntime % 3600) % 60);\n\n    return `${hours > 0 ? hours + (hours === 1 ? \" hour,\" : \" hours,\") : \"\"} ${\n      minutes > 0 ? minutes + (minutes === 1 ? \" minute\" : \" minutes\") : \"\"\n    } ${seconds > 0 ? seconds + (seconds === 1 ? \" second\" : \" seconds\") : \"\"}`;\n  }\n\n  /**\n   * Validates whether or not the profile exists in the database\n   * @param {LoginPayload} payload login payload to authenticate with\n   * @returns {Promise} registered profile\n   */\n  async validateUser(payload: LoginPayload): Promise {\n    const user = await this.profileService.getByUsernameAndPass(\n      payload.username,\n      payload.password,\n    );\n    if (!user) {\n      throw new UnauthorizedException(\n        \"Could not authenticate. Please try again.\",\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(\".env\"),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Config Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                isEnv\n                            \n                            \n                                    Private\n                                    Static\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/config/config.service.ts:19\n                            \n                        \n\n                \n                    \n                        Object that will contain the injected environment variables\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:70\n                \n            \n\n\n            \n                \n                    Fetches the key from the configuration file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the associated value for a given key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnv\n                        \n                        \n                    \n                \n            \n            \n                \nisEnv(env: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:79\n                \n            \n\n\n            \n                \n                    Checks whether the application environment set in the configuration file matches the environment parameter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    env\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether or not the environment variable matches the application environment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/config/config.service.ts:36\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the configuration object with variables from the configuration file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        a validated environment configuration object\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   * @param {EnvConfig} envConfig the configuration object with variables from the configuration file\n   * @returns {EnvConfig} a validated environment configuration object\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/config/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Key-value mapping\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/modules/config/config.service.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { parse } from \"dotenv\";\nimport * as joi from \"@hapi/joi\";\nimport * as fs from \"fs\";\n\n/**\n * Key-value mapping\n */\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\n/**\n * Config Service\n */\nexport class ConfigService {\n  /**\n   * Object that will contain the injected environment variables\n   */\n  private readonly envConfig: EnvConfig;\n\n  /**\n   * Constructor\n   * @param {string} filePath\n   */\n  constructor(filePath: string) {\n    const config = parse(fs.readFileSync(filePath));\n    this.envConfig = ConfigService.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   * @param {EnvConfig} envConfig the configuration object with variables from the configuration file\n   * @returns {EnvConfig} a validated environment configuration object\n   */\n  private static validateInput(envConfig: EnvConfig): EnvConfig {\n    /**\n     * A schema to validate envConfig against\n     */\n    const envVarsSchema: joi.ObjectSchema = joi.object({\n      APP_ENV: joi\n        .string()\n        .valid(\"dev\", \"prod\")\n        .default(\"dev\"),\n      APP_URL: joi.string().uri({\n        scheme: [/https?/],\n      }),\n      WEBTOKEN_SECRET_KEY: joi.string().required(),\n      WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n      DB_URL: joi.string().regex(/^mongodb/),\n    });\n\n    /**\n     * Represents the status of validation check on the configuration file\n     */\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n\n  /**\n   * Fetches the key from the configuration file\n   * @param {string} key\n   * @returns {string} the associated value for a given key\n   */\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n\n  /**\n   * Checks whether the application environment set in the configuration file matches the environment parameter\n   * @param {string} env\n   * @returns {boolean} Whether or not the environment variable matches the application environment\n   */\n  isEnv(env: string): boolean {\n    return this.envConfig.APP_ENV === env;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenericMessageBody.html":{"url":"interfaces/IGenericMessageBody.html","title":"interface - IGenericMessageBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGenericMessageBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Models a typical response for a crud operation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status message to return\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as gravatar from \"gravatar\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport {\n  BadRequestException,\n  Injectable,\n  NotAcceptableException,\n} from \"@nestjs/common\";\nimport { IProfile } from \"./profile.model\";\nimport { RegisterPayload } from \"modules/auth/payload/register.payload\";\nimport { AppRoles } from \"../app/app.roles\";\nimport { PatchProfilePayload } from \"./payload/patch.profile.payload\";\n\n/**\n * Models a typical response for a crud operation\n */\nexport interface IGenericMessageBody {\n  /**\n   * Status message to return\n   */\n  message: string;\n}\n\n/**\n * Profile Service\n */\n@Injectable()\nexport class ProfileService {\n  /**\n   * Constructor\n   * @param {Model} profileModel\n   */\n  constructor(\n    @InjectModel(\"Profile\") private readonly profileModel: Model,\n  ) {}\n\n  /**\n   * Fetches a profile from database by UUID\n   * @param {string} id\n   * @returns {Promise} queried profile data\n   */\n  get(id: string): Promise {\n    return this.profileModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches a profile from database by username\n   * @param {string} username\n   * @returns {Promise} queried profile data\n   */\n  getByUsername(username: string): Promise {\n    return this.profileModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches a profile by their username and hashed password\n   * @param {string} username\n   * @param {string} password\n   * @returns {Promise} queried profile data\n   */\n  getByUsernameAndPass(username: string, password: string): Promise {\n    return this.profileModel\n      .findOne({\n        username,\n        password: crypto.createHmac(\"sha256\", password).digest(\"hex\"),\n      })\n      .exec();\n  }\n\n  /**\n   * Create a profile with RegisterPayload fields\n   * @param {RegisterPayload} payload profile payload\n   * @returns {Promise} created profile data\n   */\n  async create(payload: RegisterPayload): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        \"The account with the provided username currently exists. Please choose another one.\",\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.profileModel({\n      ...payload,\n      password: crypto.createHmac(\"sha256\", payload.password).digest(\"hex\"),\n      avatar: gravatar.url(payload.email, {\n        protocol: \"http\",\n        s: \"200\",\n        r: \"pg\",\n        d: \"404\",\n      }),\n      roles: AppRoles.ADMIN,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Edit profile data\n   * @param {PatchProfilePayload} payload\n   * @returns {Promise} mutated profile data\n   */\n  async edit(payload: PatchProfilePayload): Promise {\n    const { username } = payload;\n    const updatedProfile = await this.profileModel.updateOne(\n      { username },\n      payload,\n    );\n    if (updatedProfile.nModified !== 1) {\n      throw new BadRequestException(\n        \"The profile with that username does not exist in the system. Please try another username.\",\n      );\n    }\n    return this.getByUsername(username);\n  }\n\n  /**\n   * Delete profile given a username\n   * @param {string} username\n   * @returns {Promise} whether or not the crud operation was completed\n   */\n  delete(username: string): Promise {\n    return this.profileModel.deleteOne({ username }).then(profile => {\n      if (profile.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a profile by the name of ${username}.`,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProfile.html":{"url":"interfaces/IProfile.html","title":"interface - IProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.model.ts\n        \n\n            \n                Description\n            \n            \n                Mongoose Profile Document\n\n            \n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        avatar\n                                \n                                \n                                        date\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        roles\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     Schema.Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema.Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    UUID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gravatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         AppRoles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppRoles\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Roles\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Username\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Schema, Document } from \"mongoose\";\nimport { AppRoles } from \"modules/app/app.roles\";\n\n/**\n * Mongoose Profile Schema\n */\nexport const Profile = new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\n/**\n * Mongoose Profile Document\n */\nexport interface IProfile extends Document {\n  /**\n   * UUID\n   */\n  readonly _id: Schema.Types.ObjectId;\n  /**\n   * Username\n   */\n  readonly username: string;\n  /**\n   * Email\n   */\n  readonly email: string;\n  /**\n   * Name\n   */\n  readonly name: string;\n  /**\n   * Password\n   */\n  password: string;\n  /**\n   * Gravatar\n   */\n  readonly avatar: string;\n  /**\n   * Roles\n   */\n  readonly roles: AppRoles;\n  /**\n   * Date\n   */\n  readonly date: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITokenReturnBody.html":{"url":"interfaces/ITokenReturnBody.html","title":"interface - ITokenReturnBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITokenReturnBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Models a typical Login/Register route return body\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expires\n                                \n                                \n                                        expiresPrettyPrint\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When the token is to expire in seconds\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresPrettyPrint\n                                    \n                                \n                                \n                                    \n                                        expiresPrettyPrint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A human-readable format of expires\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Bearer token\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\nimport { IProfile } from \"../profile/profile.model\";\nimport { LoginPayload } from \"./payload/login.payload\";\n\n/**\n * Models a typical Login/Register route return body\n */\nexport interface ITokenReturnBody {\n  /**\n   * When the token is to expire in seconds\n   */\n  expires: string;\n  /**\n   * A human-readable format of expires\n   */\n  expiresPrettyPrint: string;\n  /**\n   * The Bearer token\n   */\n  token: string;\n}\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {string}\n   */\n  private readonly expiration: string;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService profile service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    this.expiration = this.configService.get(\"WEBTOKEN_EXPIRATION_TIME\");\n  }\n\n  /**\n   * Creates a signed jwt token based on IProfile payload\n   * @param {Profile} param dto to generate token from\n   * @returns {Promise} token body\n   */\n  async createToken({\n    _id,\n    username,\n    email,\n    avatar,\n  }: IProfile): Promise {\n    return {\n      expires: this.expiration,\n      expiresPrettyPrint: this.prettyPrintSeconds(this.expiration),\n      token: this.jwtService.sign({ _id, username, email, avatar }),\n    };\n  }\n\n  /**\n   * Formats the time in seconds into human-readable format\n   * @param {string} time\n   * @returns {string} hrf time\n   */\n  private prettyPrintSeconds(time: string): string {\n    const ntime = Number(time);\n    const hours = Math.floor(ntime / 3600);\n    const minutes = Math.floor((ntime % 3600) / 60);\n    const seconds = Math.floor((ntime % 3600) % 60);\n\n    return `${hours > 0 ? hours + (hours === 1 ? \" hour,\" : \" hours,\") : \"\"} ${\n      minutes > 0 ? minutes + (minutes === 1 ? \" minute\" : \" minutes\") : \"\"\n    } ${seconds > 0 ? seconds + (seconds === 1 ? \" second\" : \" seconds\") : \"\"}`;\n  }\n\n  /**\n   * Validates whether or not the profile exists in the database\n   * @param {LoginPayload} payload login payload to authenticate with\n   * @returns {Promise} registered profile\n   */\n  async validateUser(payload: LoginPayload): Promise {\n    const user = await this.profileService.getByUsernameAndPass(\n      payload.username,\n      payload.password,\n    );\n    if (!user) {\n      throw new UnauthorizedException(\n        \"Could not authenticate. Please try again.\",\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: JwtPayload, done)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    \n                                            JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    done\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        callback to resolve the request user with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not to validate the jwt token\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, JwtPayload, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { ConfigService } from \"../config/config.service\";\nimport { ProfileService } from \"../profile/profile.service\";\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} profileService\n   */\n  constructor(\n    readonly configService: ConfigService,\n    private readonly profileService: ProfileService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"WEBTOKEN_SECRET_KEY\"),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {JwtPayload} jwtPayload validation method for jwt token\n   * @param {any} done callback to resolve the request user with\n   * @returns {Promise} whether or not to validate the jwt token\n   */\n  async validate({ iat, exp, _id }: JwtPayload, done): Promise {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/login.payload.ts\n        \n\n            \n                Description\n            \n            \n                Login Paylaod Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:26\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/login.payload.ts:16\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from \"class-validator\";\n\n/**\n * Login Paylaod Class\n */\nexport class LoginPayload {\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchProfilePayload.html":{"url":"classes/PatchProfilePayload.html","title":"class - PatchProfilePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchProfilePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/payload/patch.profile.payload.ts\n        \n\n            \n                Description\n            \n            \n                Patch Profile Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:20\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:38\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty()@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:46\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/profile/payload/patch.profile.payload.ts:30\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Patch Profile Payload Class\n */\nexport class PatchProfilePayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty()\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/profile\n            \n\n            \n                Description\n            \n            \n                Profile Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                patchProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')@UseGuards(undefined, ACGuard)@UseRoles({resource: 'profiles', action: 'delete', possession: 'any'})@ApiResponse({status: 200, description: 'Delete Profile Request Received'})@ApiResponse({status: 400, description: 'Delete Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:82\n                \n            \n\n\n            \n                \n                    Removes a profile from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        whether or not the profile has been deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@UseGuards(undefined)@ApiResponse({status: 200, description: 'Fetch Profile Request Received'})@ApiResponse({status: 400, description: 'Fetch Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n                    Retrieves a particular profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the profile given username to fetch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried profile data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            patchProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchProfile(payload: PatchProfilePayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@UseGuards(undefined)@UseRoles({resource: 'profiles', action: 'update', possession: 'any'})@ApiResponse({status: 200, description: 'Patch Profile Request Received'})@ApiResponse({status: 400, description: 'Patch Profile Request Failed'})\n                \n            \n\n            \n                \n                    Defined in src/modules/profile/profile.controller.ts:64\n                \n            \n\n\n            \n                \n                    Edit a profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchProfilePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        mutated profile data\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ACGuard, UseRoles } from \"nest-access-control\";\nimport { ApiBearerAuth, ApiResponse, ApiUseTags } from \"@nestjs/swagger\";\nimport { ProfileService, IGenericMessageBody } from \"./profile.service\";\nimport { PatchProfilePayload } from \"./payload/patch.profile.payload\";\nimport { IProfile } from \"./profile.model\";\n\n/**\n * Profile Controller\n */\n@ApiBearerAuth()\n@ApiUseTags(\"profile\")\n@Controller(\"api/profile\")\nexport class ProfileController {\n  /**\n   * Constructor\n   * @param profileService\n   */\n  constructor(private readonly profileService: ProfileService) {}\n\n  /**\n   * Retrieves a particular profile\n   * @param username the profile given username to fetch\n   * @returns {Promise} queried profile data\n   */\n  @Get(\":username\")\n  @UseGuards(AuthGuard(\"jwt\"))\n  @ApiResponse({ status: 200, description: \"Fetch Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Fetch Profile Request Failed\" })\n  async getProfile(@Param(\"username\") username: string): Promise {\n    const profile = await this.profileService.getByUsername(username);\n    if (!profile) {\n      throw new BadRequestException(\n        \"The profile with that username could not be found.\",\n      );\n    }\n    return profile;\n  }\n\n  /**\n   * Edit a profile\n   * @param {RegisterPayload} payload\n   * @returns {Promise} mutated profile data\n   */\n  @Patch()\n  @UseGuards(AuthGuard(\"jwt\"))\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"update\",\n    possession: \"any\",\n  })\n  @ApiResponse({ status: 200, description: \"Patch Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Patch Profile Request Failed\" })\n  async patchProfile(@Body() payload: PatchProfilePayload) {\n    return await this.profileService.edit(payload);\n  }\n\n  /**\n   * Removes a profile from the database\n   * @param {string} username the username to remove\n   * @returns {Promise} whether or not the profile has been deleted\n   */\n  @Delete(\":username\")\n  @UseGuards(AuthGuard(\"jwt\"), ACGuard)\n  @UseRoles({\n    resource: \"profiles\",\n    action: \"delete\",\n    possession: \"any\",\n  })\n  @ApiResponse({ status: 200, description: \"Delete Profile Request Received\" })\n  @ApiResponse({ status: 400, description: \"Delete Profile Request Failed\" })\n  async delete(\n    @Param(\"username\") username: string,\n  ): Promise {\n    return await this.profileService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nProfileService \n\nProfileService \n\n\n\nProfileModule\n\nProfileModule\n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ProfileService } from \"./profile.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Profile } from \"./profile.model\";\nimport { ProfileController } from \"./profile.controller\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: \"Profile\", schema: Profile }])],\n  providers: [ProfileService],\n  exports: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Profile Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/profile/profile.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:76\n                \n            \n\n\n            \n                \n                    Create a profile with RegisterPayload fields\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        created profile data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:123\n                \n            \n\n\n            \n                \n                    Delete profile given a username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        whether or not the crud operation was completed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(payload: PatchProfilePayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:104\n                \n            \n\n\n            \n                \n                    Edit profile data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchProfilePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated profile data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:43\n                \n            \n\n\n            \n                \n                    Fetches a profile from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried profile data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:52\n                \n            \n\n\n            \n                \n                    Fetches a profile from database by username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried profile data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUsernameAndPass\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/profile/profile.service.ts:62\n                \n            \n\n\n            \n                \n                    Fetches a profile by their username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried profile data\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as crypto from \"crypto\";\nimport * as gravatar from \"gravatar\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport {\n  BadRequestException,\n  Injectable,\n  NotAcceptableException,\n} from \"@nestjs/common\";\nimport { IProfile } from \"./profile.model\";\nimport { RegisterPayload } from \"modules/auth/payload/register.payload\";\nimport { AppRoles } from \"../app/app.roles\";\nimport { PatchProfilePayload } from \"./payload/patch.profile.payload\";\n\n/**\n * Models a typical response for a crud operation\n */\nexport interface IGenericMessageBody {\n  /**\n   * Status message to return\n   */\n  message: string;\n}\n\n/**\n * Profile Service\n */\n@Injectable()\nexport class ProfileService {\n  /**\n   * Constructor\n   * @param {Model} profileModel\n   */\n  constructor(\n    @InjectModel(\"Profile\") private readonly profileModel: Model,\n  ) {}\n\n  /**\n   * Fetches a profile from database by UUID\n   * @param {string} id\n   * @returns {Promise} queried profile data\n   */\n  get(id: string): Promise {\n    return this.profileModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches a profile from database by username\n   * @param {string} username\n   * @returns {Promise} queried profile data\n   */\n  getByUsername(username: string): Promise {\n    return this.profileModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches a profile by their username and hashed password\n   * @param {string} username\n   * @param {string} password\n   * @returns {Promise} queried profile data\n   */\n  getByUsernameAndPass(username: string, password: string): Promise {\n    return this.profileModel\n      .findOne({\n        username,\n        password: crypto.createHmac(\"sha256\", password).digest(\"hex\"),\n      })\n      .exec();\n  }\n\n  /**\n   * Create a profile with RegisterPayload fields\n   * @param {RegisterPayload} payload profile payload\n   * @returns {Promise} created profile data\n   */\n  async create(payload: RegisterPayload): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        \"The account with the provided username currently exists. Please choose another one.\",\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.profileModel({\n      ...payload,\n      password: crypto.createHmac(\"sha256\", payload.password).digest(\"hex\"),\n      avatar: gravatar.url(payload.email, {\n        protocol: \"http\",\n        s: \"200\",\n        r: \"pg\",\n        d: \"404\",\n      }),\n      roles: AppRoles.ADMIN,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Edit profile data\n   * @param {PatchProfilePayload} payload\n   * @returns {Promise} mutated profile data\n   */\n  async edit(payload: PatchProfilePayload): Promise {\n    const { username } = payload;\n    const updatedProfile = await this.profileModel.updateOne(\n      { username },\n      payload,\n    );\n    if (updatedProfile.nModified !== 1) {\n      throw new BadRequestException(\n        \"The profile with that username does not exist in the system. Please try another username.\",\n      );\n    }\n    return this.getByUsername(username);\n  }\n\n  /**\n   * Delete profile given a username\n   * @param {string} username\n   * @returns {Promise} whether or not the crud operation was completed\n   */\n  delete(username: string): Promise {\n    return this.profileModel.deleteOne({ username }).then(profile => {\n      if (profile.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a profile by the name of ${username}.`,\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterPayload.html":{"url":"classes/RegisterPayload.html","title":"class - RegisterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/payload/register.payload.ts\n        \n\n            \n                Description\n            \n            \n                Register Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:22\n                            \n                        \n\n                \n                    \n                        Email field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:42\n                            \n                        \n\n                \n                    \n                        Name field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsNotEmpty()@MinLength(8)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:52\n                            \n                        \n\n                \n                    \n                        Password field\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiModelProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/payload/register.payload.ts:32\n                            \n                        \n\n                \n                    \n                        Username field\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiModelProperty } from \"@nestjs/swagger\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  MinLength,\n  IsAlphanumeric,\n  Matches,\n} from \"class-validator\";\n\n/**\n * Register Payload Class\n */\nexport class RegisterPayload {\n  /**\n   * Email field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiModelProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WinstonModule.html":{"url":"modules/WinstonModule.html","title":"module - WinstonModule","body":"\n                   \n\n\n\n\n    Modules\n    WinstonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/winston/winston.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: WinstonModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:21\n                \n            \n\n\n            \n                \n                    Constructor for winson module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: WinstonModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/winston/winston.module.ts:35\n                \n            \n\n\n            \n                \n                    Asynchronous constructor for winston module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                WinstonModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from \"@nestjs/common\";\nimport {\n  WinstonModuleAsyncOptions,\n  WinstonModuleOptions,\n} from \"./winston.interfaces\";\nimport {\n  createWinstonAsyncProviders,\n  createWinstonProviders,\n} from \"./winston.providers\";\n\n@Global()\n@Module({})\n/**\n * Represents a Winston Module\n */\nexport class WinstonModule {\n  /**\n   * Constructor for winson module\n   * @param options\n   */\n  public static forRoot(options: WinstonModuleOptions): DynamicModule {\n    const providers = createWinstonProviders(options);\n\n    return {\n      module: WinstonModule,\n      providers,\n      exports: providers,\n    };\n  }\n\n  /**\n   * Asynchronous constructor for winston module\n   * @param options\n   */\n  public static forRootAsync(\n    options: WinstonModuleAsyncOptions,\n  ): DynamicModule {\n    const providers = createWinstonAsyncProviders(options);\n\n    return {\n      module: WinstonModule,\n      imports: options.imports,\n      providers,\n      exports: providers,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WinstonModuleAsyncOptions.html":{"url":"interfaces/WinstonModuleAsyncOptions.html","title":"interface - WinstonModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WinstonModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/winston/winston.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Asynchronous winston module options\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Providers to inject\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default factory method that returns winston module options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport { LoggerOptions } from \"winston\";\n\n/**\n * Logger options\n */\nexport type WinstonModuleOptions = LoggerOptions;\n\n/**\n * Asynchronous winston module options\n */\nexport interface WinstonModuleAsyncOptions\n  extends Pick {\n  /**\n   * Default factory method that returns winston module options\n   */\n  useFactory: (\n    ...args: any[]\n  ) => Promise | WinstonModuleOptions;\n\n  /**\n   * Providers to inject\n   */\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_AUTH_LOCATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_AUTH_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SWAGGER_API_SCHEMES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/app/app.roles.ts\n            \n            variable\n            roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            interface\n            ITokenReturnBody\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/login.payload.ts\n            \n            class\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/auth/payload/register.payload.ts\n            \n            class\n            RegisterPayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/modules/config/config.service.ts\n            \n            interface\n            EnvConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/payload/patch.profile.payload.ts\n            \n            class\n            PatchProfilePayload\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            interface\n            IProfile\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.model.ts\n            \n            variable\n            Profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/modules/profile/profile.service.ts\n            \n            interface\n            IGenericMessageBody\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.constants.ts\n            \n            variable\n            WINSTON_MODULE_PROVIDER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.interfaces.ts\n            \n            interface\n            WinstonModuleAsyncOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonAsyncProviders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/winston/winston.providers.ts\n            \n            variable\n            createWinstonProviders\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : 16.1.7\n        \n            @nestjs/common : 6.8.2\n        \n            @nestjs/core : 6.8.2\n        \n            @nestjs/jwt : 6.1.1\n        \n            @nestjs/mongoose : 6.1.2\n        \n            @nestjs/passport : 6.1.0\n        \n            @nestjs/platform-express : 6.8.2\n        \n            @nestjs/platform-fastify : 6.8.2\n        \n            @nestjs/swagger : 3.1.0\n        \n            @nestjs/typeorm : 6.2.0\n        \n            class-transformer : 0.2.3\n        \n            class-validator : 0.10.1\n        \n            crypto : 1.0.1\n        \n            dotenv : 8.1.0\n        \n            express-rate-limit : 5.0.0\n        \n            fastify-helmet : 3.0.1\n        \n            fastify-rate-limit : 2.4.0\n        \n            fastify-swagger : 2.4.0\n        \n            gravatar : 1.8.0\n        \n            helmet : 3.21.1\n        \n            mongoose : 5.7.3\n        \n            nest-access-control : 2.0.1\n        \n            passport : 0.4.0\n        \n            passport-jwt : 4.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.0\n        \n            rxjs : 6.5.3\n        \n            swagger-ui-express : 4.1.2\n        \n            typeorm : 0.2.19\n        \n            winston : 3.2.1\n        \n            winston-daily-rotate-file : 4.2.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppRoles   (src/.../app.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/app/app.roles.ts\n    \n        \n            \n                \n                    \n                        \n                        AppRoles\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : DEFAULT\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n  \n\n&#x1F4DA; Description\nThis boilerplate is made to quickly prototype backend applications. It comes with database, logging, security, and authentication features out of the box.\n\n&#x1F6E0;️ Prerequisites\nNon Docker\n\nPlease make sure to have MongoDB locally, or utilize Mongo on the cloud by configuration a cluster in atlas. Then grab the connection string and modify the following line.\n\nDocker &#x1F433;\n\nPlease make sure to have docker desktop setup on any preferred operating system to quickly compose both the MongoDB and web application. Then follow the steps outlined below.\n\n\n&#x1F680; Deployment\nManual Deployment without Docker\n\nCreate a .env file using the cp .env.example .env command and replace the existing env variables with personal settings (MongoDB URL either srv or localhost)\n\nInstall dependencies using npm i or yarn\n\nStart the app for pre-production using npm run start or for development using npm run start:dev (the app will be exposed on the port 9000; not to conflict with React, Angular, or Vue)\n\n\nDeploying with Docker &#x1F433;\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container with required configuration\n$ docker-compose up -d \nThe following command will set up the project for you (building the Docker images, starting docker-compose stack). The Web application and mongo will be exposed to http://localhost:9000 and http://localhost:27017 respectively\n\n&#x1F512; Environment Configuration\nBy default, the application comes with a config module that can inject the ConfigService and read every environment variable from the .env. file.\nAPP_ENV - the application environment it will be executing as, either in development or production. Determines the type of logging options to utilize. Options: dev or prod. \nAPP_URL - the base URL for the application. Made mainly to showcase the ConfigService and can be removed if not used.\nWEBTOKEN_SECRET_KEY - the secret key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this. Not \nWEBTOKEN_EXPIRATION_TIME - the time in seconds indicating when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_URL - the URL to the MongoDB collection\n\n&#x1F3D7; Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But this can be changed to use Express framework instead of Fastify. Please proceed the steps below to change between the two.\n\nReplace the following lines of code in the main.ts file with the ones detailed below.\n\n// from (fastify):\nimport {\n  FastifyAdapter,\n  NestFastifyApplication,\n} from '@nestjs/platform-fastify';\nimport * as headers from 'fastify-helmet';\nimport * as fastifyRateLimiter from 'fastify-rate-limit';\nconst app = await NestFactory.create(\n  AppModule,\n  new FastifyAdapter({ logger: console }),\n);\napp.register(headers);\napp.register(fastifyRateLimiter, {\n  max: 100,\n  timeWindow: '1 minute',\n});\n\n// to (express):\nimport * as headers from 'helmet';\nimport * as rateLimiter from 'express-rate-limit';\nconst app = await NestFactory.create(AppModule, {\n  logger: console,\n});\napp.use(headers());\napp.use(\n  rateLimiter({\n    windowMs: 60, // 1 minutes\n    max: 100, // limit each IP to 100 requests per windowMs\n  }),\n);Note: The package.jsoncomes with dependencies for both Express and Fastify to support moving between two. But this can leave the project bloated especially when only one web framework is being used. Thus it is recommended that when deploying to production, a purger of unused dependencies occurs. \nIf you choose to use Fastify, this command will purge all of the Express dependencies:\n# removing Express dependencies\n$ npm rm @nestjs/platform-express express-rate-limit helmet swagger-ui-express @types/express --saveIf you choose to use Express, this command will purge all of the Fastify dependencies:\n# removing Fastify dependencies\n$ npm rm @nestjs/platform-fastify fastify-helmet fastify-rate-limit fastify-swagger --save\n✅ Testing\nDocker &#x1F433;\n# unit tests\n$ docker exec -it nest yarn test\n\n# e2e tests\n$ docker exec -it nest yarn test:e2e\n\n# test coverage\n$ docker exec -it nest yarn test:covNon-Docker\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n&#x1F4A1; TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, simply, by typing npm run typedocs. This will produce a docs folder with the required front-end files and start hosting on localhost port 8080.\n# generate docs for code\n$ npm run typedocs\n&#x1F4DD; Open API\nOut of the box, the web app comes with an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ Mongoose\nMongoose provides a straight-forward, schema-based solution to model your application data. It includes built-in type casting, validation, query building, business logic hooks and more, out of the box. Please view the documentation for further details.\nThe configuration for Mongoose can be found in the app module.\n\n&#x1F50A; Logs\nThis boilerplate comes with a Winston module for logging, the configurations for Winston can be found in the app module.\n\n&#x1F465; Support\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\nLicense\nNest is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WinstonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAuthModule -->\n\nProfileModule->AuthModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nWinstonModule\n\nWinstonModule\n\nAppModule -->\n\nWinstonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonModuleOptions   (src/.../winston.interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/winston/winston.interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    WinstonModuleOptions\n                \n            \n            \n                \n                    Logger options\n\n                \n            \n            \n                \n                        LoggerOptions\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createWinstonAsyncProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            createWinstonProviders   (src/.../winston.providers.ts)\n                        \n                        \n                            Profile   (src/.../profile.model.ts)\n                        \n                        \n                            roles   (src/.../app.roles.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_LOCATION   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_AUTH_NAME   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_CURRENT_VERSION   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_DESCRIPTION   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_NAME   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_ROOT   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_API_SCHEMES   (src/.../main.ts)\n                        \n                        \n                            WINSTON_MODULE_OPTIONS   (src/.../winston.constants.ts)\n                        \n                        \n                            WINSTON_MODULE_PROVIDER   (src/.../winston.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/winston/winston.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonAsyncProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  options: WinstonModuleAsyncOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_OPTIONS,\n      useFactory: options.useFactory,\n      inject: options.inject || [],\n    },\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: (loggerOpts: LoggerOptions) => createLogger(loggerOpts),\n      inject: [WINSTON_MODULE_OPTIONS],\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Async constructor for a winston provider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createWinstonProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  loggerOpts: WinstonModuleOptions,\n): Provider[] => {\n  return [\n    {\n      provide: WINSTON_MODULE_PROVIDER,\n      useFactory: () => createLogger(loggerOpts),\n    },\n  ];\n}\n                        \n                    \n\n                \n                    \n                        Constructor a winston provider\n\n                    \n                \n\n            \n        \n\n    src/modules/profile/profile.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  username: { type: String, required: true },\n  email: { type: String, required: true },\n  name: { type: String, required: true },\n  password: { type: String, required: true },\n  avatar: { type: String, required: true },\n  roles: [{ type: String }],\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n})\n                        \n                    \n\n                \n                    \n                        Mongoose Profile Schema\n\n                    \n                \n\n            \n        \n\n    src/modules/app/app.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RolesBuilder\n\n                        \n                    \n                    \n                        \n                            Default value : new RolesBuilder()\n                        \n                    \n\n                \n                    \n                        Roles Builder\n\n                    \n                \n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"header\"\n                        \n                    \n\n                \n                    \n                        Where the SWAGGER_API_AUTH_NAME will be used in the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_AUTH_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Authorization\"\n                        \n                    \n\n                \n                    \n                        The default authentication method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_CURRENT_VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"1.0\"\n                        \n                    \n\n                \n                    \n                        Current version of the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API Description\"\n                        \n                    \n\n                \n                    \n                        A short description for api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"API\"\n                        \n                    \n\n                \n                    \n                        The name given to the api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_ROOT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/docs\"\n                        \n                    \n\n                \n                    \n                        The endpoint for open api ui\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWAGGER_API_SCHEMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"http\", \"https\"]\n                        \n                    \n\n                \n                    \n                        Types of api schemes\n\n                    \n                \n\n            \n        \n\n    src/modules/winston/winston.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"WinstonModuleOptions\"\n                        \n                    \n\n                \n                    \n                        Token for the type of configuration to be used when declaring in the app module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WINSTON_MODULE_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"winston\"\n                        \n                    \n\n                \n                    \n                        An identifier to use for injecting the winston provider\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
